<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://slx-world.top</id>
    <title>荒天帝</title>
    <subtitle></subtitle>
    <icon>https://slx-world.top/images/favicon.ico</icon>
    <link href="https://slx-world.top" />
    <author>
      <name>Mr.Song</name>
    </author>
    <updated>2025-03-02T07:59:20.909Z</updated>
    <category term="柳神，火灵儿" />
    <entry>
        <id>https://slx-world.top/hello-world/</id>
        <title>Hello World</title>
        <link rel="alternate" href="https://slx-world.top/hello-world/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo new &lt;span class=&#34;token string&#34;&gt;&#34;My New Post&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo server&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo generate&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo deploy&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
</content>
        <updated>2025-03-02T07:59:20.909Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/bigdata/sql/day01/</id>
        <title>MySQL 条件查询</title>
        <link rel="alternate" href="https://slx-world.top/bigdata/sql/day01/"/>
        <content type="html">&lt;h1 id=&#34;比较运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#比较运算符&#34;&gt;#&lt;/a&gt; 比较运算符&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;等于&lt;/td&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;大于&lt;/td&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;大于等于&lt;/td&gt;
&lt;td&gt;&amp;gt;=&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;小于&lt;/td&gt;
&lt;td&gt;&amp;lt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;小于等于&lt;/td&gt;
&lt;td&gt;&amp;lt;=&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;不等于&lt;/td&gt;
&lt;td&gt;!= 或 &lt;span class=&#34;red&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;逻辑运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#逻辑运算符&#34;&gt;#&lt;/a&gt; 逻辑运算符&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;与&lt;/th&gt;
&lt;th&gt;and&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;或&lt;/td&gt;
&lt;td&gt;or&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;非&lt;/td&gt;
&lt;td&gt;not&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;where-条件查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#where-条件查询&#34;&gt;#&lt;/a&gt; where 条件查询&lt;/h1&gt;
&lt;h2 id=&#34;模糊查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模糊查询&#34;&gt;#&lt;/a&gt; 模糊查询&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;like&lt;/span&gt; 是模糊查询关键字&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;%&lt;/span&gt;：多个任意字符&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;_&lt;/span&gt;：一个任意字符&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;范围查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#范围查询&#34;&gt;#&lt;/a&gt; 范围查询&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;between ... and ...&lt;/span&gt;：在一个连续的范围内查询&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;in&lt;/span&gt;：在一个非连续的范围内查询&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;空判断查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#空判断查询&#34;&gt;#&lt;/a&gt; 空判断查询&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;判断为空使用：&lt;span class=&#34;red&#34;&gt;is null&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;判断非空使用：&lt;span class=&#34;red&#34;&gt;is not null&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;note warning&#34;&gt;
&lt;ul&gt;
&lt;li&gt;不能使用 &lt;span class=&#34;yellow&#34;&gt;= null&lt;/span&gt; 判断为空&lt;/li&gt;
&lt;li&gt;不能使用 &lt;span class=&#34;yellow&#34;&gt;!= null&lt;/span&gt; 判断非空&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id=&#34;order-by-排序查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#order-by-排序查询&#34;&gt;#&lt;/a&gt; order by 排序查询&lt;/h1&gt;
&lt;p&gt;排序使用 &lt;span class=&#34;red&#34;&gt;order by&lt;/span&gt; 关键字&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;asc&lt;/span&gt;：升序&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;desc&lt;/span&gt;：降序&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;limit-分页查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#limit-分页查询&#34;&gt;#&lt;/a&gt; limit 分页查询&lt;/h1&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;span&gt;limit 分页查询&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;limit&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;当前页码 &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; 每页数量&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 每页数量&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;扩展mysql-五子句&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#扩展mysql-五子句&#34;&gt;#&lt;/a&gt; 扩展：MySQL 五子句&lt;/h1&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;span&gt;MySQL 五子句&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; 数据表 &lt;span class=&#34;token keyword&#34;&gt;where&lt;/span&gt; 子句 &lt;span class=&#34;token keyword&#34;&gt;group&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; 分组子句 &lt;span class=&#34;token keyword&#34;&gt;having&lt;/span&gt; 子句 &lt;span class=&#34;token keyword&#34;&gt;order&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; 子句 &lt;span class=&#34;token keyword&#34;&gt;limit&lt;/span&gt; 子句&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol&gt;
&lt;li&gt;where&lt;/li&gt;
&lt;li&gt;group by&lt;/li&gt;
&lt;li&gt;having&lt;/li&gt;
&lt;li&gt;order by&lt;/li&gt;
&lt;li&gt;limit&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;合称 MySQL 五子句，五子句顺序不能颠倒&lt;/p&gt;
&lt;h1 id=&#34;聚合函数组函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#聚合函数组函数&#34;&gt;#&lt;/a&gt; 聚合函数（组函数）&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;总行数&lt;/th&gt;
&lt;th&gt;count(col)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;最大值&lt;/td&gt;
&lt;td&gt;max(col)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;最小值&lt;/td&gt;
&lt;td&gt;min(col)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;求和&lt;/td&gt;
&lt;td&gt;sum(col)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;求平均&lt;/td&gt;
&lt;td&gt;avg(col)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;ifnull()&lt;/span&gt; 函数：表示判断指定字段的值是否为 null，如果为空，则使用自己提供的值&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;ifnull (字段，默认值)&lt;/span&gt;：如果这个字段为 null，系统会自动将其设置为默认值&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id=&#34;聚合函数的特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#聚合函数的特点&#34;&gt;#&lt;/a&gt; 聚合函数的特点&lt;/h2&gt;
&lt;p&gt;聚合函数默认忽略字段为 null 的记录，如果想要列值为 null 的记录也参与计算，必须使用 &lt;span class=&#34;red&#34;&gt;ifnull()&lt;/span&gt; 函数对 null 值做替换&lt;/p&gt;
&lt;h1 id=&#34;分组查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分组查询&#34;&gt;#&lt;/a&gt; 分组查询&lt;/h1&gt;
&lt;h2 id=&#34;分组查询介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分组查询介绍&#34;&gt;#&lt;/a&gt; 分组查询介绍&lt;/h2&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;span&gt;分组查询语法&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;group&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;by&lt;/span&gt; 列名 &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;having&lt;/span&gt; 条件表达式&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;with rollup&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;列名：是指按照指定字段的值进行分组&lt;/li&gt;
&lt;li&gt;having 条件表达式：用来过滤分组后的数据&lt;/li&gt;
&lt;li&gt;with rollup：在所有记录的最后加上一条记录，显示 select 查询时聚合函数的统计和计算结果&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;group-by-的使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#group-by-的使用&#34;&gt;#&lt;/a&gt; group by 的使用&lt;/h2&gt;
&lt;p&gt;group by 可用于单个字段分组，也可用于多个字段分组&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;group by 可以实现去重操作&lt;/li&gt;
&lt;li&gt;group by 的作用是为了实现分组统计，&lt;span class=&#34;yellow&#34;&gt;group by&lt;/span&gt; 与&lt;span class=&#34;yellow&#34;&gt;聚合函数&lt;/span&gt;搭配使用&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;group-by-搭配-group_concat&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#group-by-搭配-group_concat&#34;&gt;#&lt;/a&gt; group by 搭配 group_concat ()&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;group_concat (字段名)&lt;/span&gt;：统计每个分组指定字段的信息集合，每个信息之间使用逗号进行分割&lt;/p&gt;
&lt;h2 id=&#34;group-by-搭配-having&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#group-by-搭配-having&#34;&gt;#&lt;/a&gt; group by 搭配 having&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;having&lt;/span&gt; 作用和 where 类似，都是过滤数据的，但 having 是过滤分组数据的，只能用于 group by&lt;/p&gt;
&lt;h2 id=&#34;group-by-搭配-with-rollup&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#group-by-搭配-with-rollup&#34;&gt;#&lt;/a&gt; group by 搭配 with rollup&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;with rollup&lt;/span&gt; 的作用是：在最后记录后面新增一行，显示 select 查询时聚合函数的统计和计算结果&lt;/p&gt;
&lt;h1 id=&#34;连接查询之内-外-自连接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#连接查询之内-外-自连接&#34;&gt;#&lt;/a&gt; 连接查询之内、外、自连接&lt;/h1&gt;
&lt;h2 id=&#34;交叉连接了解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#交叉连接了解&#34;&gt;#&lt;/a&gt; 交叉连接（了解）&lt;/h2&gt;
&lt;p&gt;没有意思，但是它是所有连接的基础。其功能就是将表 1 和表 2 中的每一条数据进行连接。&lt;/p&gt;
&lt;p&gt;结果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;字段数 = 表 1 字段 + 表 2 的字段&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;记录数 = 表 1 中的总数量 * 表 2 中的总数量（笛卡尔积）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;span&gt;交叉连接&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; students &lt;span class=&#34;token keyword&#34;&gt;cross&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;join&lt;/span&gt; classes&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;或&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;span&gt;交叉连接&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; students&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; classes&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;内连接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内连接&#34;&gt;#&lt;/a&gt; 内连接&lt;/h2&gt;
&lt;p&gt;连接查询可以分为:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;内连接查询&lt;/li&gt;
&lt;li&gt;左连接查询&lt;/li&gt;
&lt;li&gt;右连接查询&lt;/li&gt;
&lt;li&gt;自连接查询&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;内连接查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内连接查询&#34;&gt;#&lt;/a&gt; 内连接查询&lt;/h3&gt;
&lt;p&gt;查询两个表中符合条件的共有记录&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241114232701203.png&#34; alt=&#34;image-20241114232701203&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;内连接查询语法格式:&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;span&gt;内连接查询&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; 字段 &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; 表&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;inner&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;join&lt;/span&gt; 表&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; 表&lt;span class=&#34;token number&#34;&gt;1.&lt;/span&gt;字段&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; 表&lt;span class=&#34;token number&#34;&gt;2.&lt;/span&gt;字段&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;inner join&lt;/span&gt;：内连接查询关键字&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;on&lt;/span&gt;：连接查询条件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;左外连接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#左外连接&#34;&gt;#&lt;/a&gt; 左外连接&lt;/h2&gt;
&lt;h3 id=&#34;左连接查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#左连接查询&#34;&gt;#&lt;/a&gt; 左连接查询&lt;/h3&gt;
&lt;p&gt;以左表为主根据条件查询右表数据，如果根据条件查询右表数据不存在使用 null 值填充&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241114233245081.png&#34; alt=&#34;image-20241114233245081&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;左连接查询语法格式:&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;span&gt;左连接查询&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; 字段 &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; 表&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;left&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;join&lt;/span&gt; 表&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; 表&lt;span class=&#34;token number&#34;&gt;1.&lt;/span&gt;字段&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; 表&lt;span class=&#34;token number&#34;&gt;2.&lt;/span&gt;字段&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;left join&lt;/span&gt;：左连接查询关键字&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;on&lt;/span&gt;：连接查询条件&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;表 1&lt;/span&gt;：左表&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;表 2&lt;/span&gt;：右表&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;右外连接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#右外连接&#34;&gt;#&lt;/a&gt; 右外连接&lt;/h2&gt;
&lt;h3 id=&#34;右外连接查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#右外连接查询&#34;&gt;#&lt;/a&gt; 右外连接查询&lt;/h3&gt;
&lt;p&gt;以右表为主根据条件查询左表数据，如果根据条件查询左表数据不存在使用 null 值填充&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241114233628006.png&#34; alt=&#34;image-20241114233628006&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;右连接查询语法格式:&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;span&gt;右外连接查询&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; 字段 &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; 表&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;right&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;join&lt;/span&gt; 表&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;on&lt;/span&gt; 表&lt;span class=&#34;token number&#34;&gt;1.&lt;/span&gt;字段&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; 表&lt;span class=&#34;token number&#34;&gt;2.&lt;/span&gt;字段&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;right join&lt;/span&gt;：右连接查询关键字&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;on&lt;/span&gt;：连接查询条件&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;表 1&lt;/span&gt;：左表&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;表 2&lt;/span&gt;：右表&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;自连接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自连接&#34;&gt;#&lt;/a&gt; 自连接&lt;/h2&gt;
&lt;h3 id=&#34;自连接查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自连接查询&#34;&gt;#&lt;/a&gt; 自连接查询&lt;/h3&gt;
&lt;p&gt;左表和右表是同一个表，根据连接查询条件查询两个表中的数据。&lt;/p&gt;
&lt;h1 id=&#34;子查询三步走&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#子查询三步走&#34;&gt;#&lt;/a&gt; 子查询（三步走）&lt;/h1&gt;
&lt;p&gt;在一个 select 语句中，嵌入了另外一个 select 语句，那么被嵌入的 select 语句称之为子查询语句，外部那个 select 语句则称为主查询.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主查询和子查询的关系:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;子查询是嵌入到主查询中&lt;/li&gt;
&lt;li&gt;子查询是辅助主查询的，要么充当条件，要么充当数据源（数据表）&lt;/li&gt;
&lt;li&gt;子查询是可以独立存在的语句，是一条完整的 select 语句&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;子查询是一个完整的 SQL 语句，子查询被嵌入到一对小括号里面&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;数据库设计三范式了解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库设计三范式了解&#34;&gt;#&lt;/a&gt; 数据库设计三范式（了解）&lt;/h1&gt;
&lt;p&gt;范式：对设计数据库提出的一些规范，目前有迹可寻的共有 8 种范式，一般遵守 3 范式即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一范式（1NF）：强调的是列的&lt;span class=&#34;red&#34;&gt;原子性&lt;/span&gt;，即列不能够再分成其他几列。&lt;/li&gt;
&lt;li&gt;第二范式（2NF）：满足 1NF，另外包含两部分内容，一是表必须有&lt;span class=&#34;red&#34;&gt;一个主键&lt;/span&gt;；二是&lt;span class=&#34;red&#34;&gt;非主键字段 必须完全依赖于主键，而不能只依赖于主键的一部分&lt;/span&gt;。（一个表中只能有一类数据）&lt;/li&gt;
&lt;li&gt;第三范式（3NF）：满足 2NF，另外&lt;span class=&#34;red&#34;&gt;非主键列必须直接依赖于主键，不能存在传递依赖&lt;/span&gt;。即不能存在：非主键列 A 依赖于非主键列 B，非主键列 B 依赖于主键的情况。（非主键字段必须直接依赖主键）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;e-r-模型的介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#e-r-模型的介绍&#34;&gt;#&lt;/a&gt; E-R 模型的介绍&lt;/h2&gt;
&lt;p&gt;E-R 模型即&lt;span class=&#34;red&#34;&gt;实体 - 关系&lt;/span&gt;模型，E-R 模型就是描述数据库存储数据的结构模型。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;E-R 模型的使用场景:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对于大型公司开发项目，我们需要根据产品经理的设计，我们先使用建模工具，如: power designer，db desinger 等这些软件来画出实体 - 关系模型（E-R 模型）&lt;/li&gt;
&lt;li&gt;然后根据三范式设计数据库表结构&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;E-R 模型的效果图:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241114235251067.png&#34; alt=&#34;image-20241114235251067&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实体：用矩形表示，并标注实体名称&lt;/li&gt;
&lt;li&gt;属性：用椭圆表示，并标注属性名称，&lt;/li&gt;
&lt;li&gt;关系：用菱形表示，并标注关系名称&lt;/li&gt;
&lt;li&gt;一对一&lt;/li&gt;
&lt;li&gt;一对多&lt;/li&gt;
&lt;li&gt;多对多&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;外键扩展&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#外键扩展&#34;&gt;#&lt;/a&gt; 外键（扩展）&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;主键：&lt;span class=&#34;red&#34;&gt;primary key&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;外键：&lt;span class=&#34;red&#34;&gt;foreign key&lt;/span&gt;（应用场景：在两表或多表关联的时候设置的，用于标志两个表之间的联系）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;外键约束作用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#外键约束作用&#34;&gt;#&lt;/a&gt; 外键约束作用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;外键约束：对外键字段的值进行更新和插入时会和引用表中字段的数据进行验证，数据如果不合法则更新和插入会失败，保证数据的有效性。&lt;/li&gt;
&lt;li&gt;外键设计原则：保证两张表的关联关系，保证数据的一致性。在选择时，一般在一个表中时关联字段，在另外一个表中是主键，则这个字段建议设置为外键。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;SET FOREIGN_KEY_CHECKS=0 外键检查&lt;/p&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;添加外键约束:&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;alter&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; 从表 &lt;span class=&#34;token keyword&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;foreign&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;外键字段&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;references&lt;/span&gt; 主表&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;主键字段&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除外键约束:&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;alter&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;table&lt;/span&gt; 表名 &lt;span class=&#34;token keyword&#34;&gt;drop&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;foreign&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;key&lt;/span&gt; 外键名&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="BigData" scheme="https://slx-world.top/categories/bigdata/" />
        <category term="SQL" scheme="https://slx-world.top/tags/sql/" />
        <updated>2024-11-10T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/bigdata/sql/day02/</id>
        <title>窗口函数</title>
        <link rel="alternate" href="https://slx-world.top/bigdata/sql/day02/"/>
        <content type="html">&lt;h1 id=&#34;窗口函数简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#窗口函数简介&#34;&gt;#&lt;/a&gt; 窗口函数简介&lt;/h1&gt;
&lt;h2 id=&#34;什么是窗口函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是窗口函数&#34;&gt;#&lt;/a&gt; 什么是窗口函数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;窗口函数是类似于可以返回聚合值的函数，例如 SUM ()，COUNT ()，MAX ()。但是窗口函数又与普通的聚合函数不同，它不会对结果进行分组，使得输出中的行数与输入中的行数相同。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个窗口函数大概看起来是这样：&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;SELECT&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;SUM&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;OVER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;PARTITION&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BY&lt;/span&gt; ___ &lt;span class=&#34;token keyword&#34;&gt;ORDER&lt;/span&gt; BY___&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;FROM&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;Table&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;聚合功能：在上述例子中，我们用了 SUM ()，但是你也可以用 COUNT ()， AVAVG () 之类的计算功能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PAPARTITION BY：你只需将它看成 GROUP BY 子句，但是在窗口函数中，你要写 PAPARTITION BY&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ORDER BY：ORDER BY 和普通查询语句中的 ORDER BY 没什么不同。注意，输出的顺序要仔细考虑&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;窗口函数的优点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#窗口函数的优点&#34;&gt;#&lt;/a&gt; 窗口函数的优点&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;简单&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;窗口函数更易于使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;快速&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这一点与上一点相关，使用窗口函数比使用替代方法要快得多。当你处理成百上千个千兆字节的数据时，这非常有用。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多功能性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最重要的是，窗口函数具有多种功能，比如，添加移动平均线，添加行号和滞后数据，等等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;over&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#over&#34;&gt;#&lt;/a&gt; over()&lt;/h1&gt;
</content>
        <category term="BigData" scheme="https://slx-world.top/categories/bigdata/" />
        <category term="SQL" scheme="https://slx-world.top/tags/sql/" />
        <updated>2024-11-10T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/backend/database/redis/distributed-cache/</id>
        <title>Redis 高级篇</title>
        <link rel="alternate" href="https://slx-world.top/backend/database/redis/distributed-cache/"/>
        <content type="html">&lt;h1 id=&#34;redis-持久化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis-持久化&#34;&gt;#&lt;/a&gt; 🎨Redis 持久化&lt;/h1&gt;
&lt;p&gt;Redis 有两种持久化方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RDB 持久化&lt;/li&gt;
&lt;li&gt;AOF 持久化&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;rdb-持久化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rdb-持久化&#34;&gt;#&lt;/a&gt; 🎁RDB 持久化&lt;/h2&gt;
&lt;p&gt;RDB 全称 Redis Database Backup file（Redis 数据备份文件），也被叫做 Redis 数据快照。简单来说就是把内存中的所有数据都记录到磁盘中。当 Redis 实例故障重启后，从磁盘读取快照文件，恢复数据。快照文件称为 RDB 文件，默认是保存在当前运行目录。&lt;/p&gt;
&lt;h3 id=&#34;执行时机&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#执行时机&#34;&gt;#&lt;/a&gt; 🎈执行时机&lt;/h3&gt;
&lt;p&gt;RDB 持久化在四种情况下会执行：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;执行 save 命令&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;执行 bgsave 命令&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;Redis 停机时&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;触发 RDB 条件时&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;save 命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;执行下面的命令，可以立即执行一次 RDB：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20250302144355562.png&#34; alt=&#34;image-20250302144355562&#34; /&gt;&lt;/p&gt;
&lt;p&gt;save 命令会导致主进程执行 RDB，这个过程中其它所有命令都会被阻塞。只有在数据迁移时可能用到。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;bgsave 命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面的命令可以异步执行 RDB：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725144725943.png&#34; alt=&#34;image-20210725144725943&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这个命令执行后会开启独立进程完成 RDB，主进程可以持续处理用户请求，不受影响。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;停机时&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Redis 停机时会执行一次 save 命令，实现 RDB 持久化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;触发 RDB 条件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Redis 内部有触发 RDB 的机制，可以在 redis.conf 文件中找到，格式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight properties&#34;&gt;&lt;figcaption data-lang=&#34;.properties&#34;&gt;&lt;span&gt;redis.conf&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 900 秒内，如果至少有 1 个 key 被修改，则执行 bgsave ， 如果是 save &#34;&#34; 则表示禁用 RDB&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;save&lt;/span&gt; &lt;span class=&#34;token value attr-value&#34;&gt;900 1  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;save&lt;/span&gt; &lt;span class=&#34;token value attr-value&#34;&gt;300 10  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;save&lt;/span&gt; &lt;span class=&#34;token value attr-value&#34;&gt;60 10000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;RDB 的其它配置也可以在 redis.conf 文件中设置：&lt;/p&gt;
&lt;figure class=&#34;highlight properties&#34;&gt;&lt;figcaption data-lang=&#34;.properties&#34;&gt;&lt;span&gt;redis.conf&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 是否压缩，建议不开启，压缩也会消耗 cpu，磁盘的话不值钱&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;rdbcompression&lt;/span&gt; &lt;span class=&#34;token value attr-value&#34;&gt;yes&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# RDB 文件名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;dbfilename&lt;/span&gt; &lt;span class=&#34;token value attr-value&#34;&gt;dump.rdb  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 文件保存的路径目录&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;dir&lt;/span&gt; &lt;span class=&#34;token value attr-value&#34;&gt;./&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;rdb-原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rdb-原理&#34;&gt;#&lt;/a&gt; 🎈RDB 原理&lt;/h3&gt;
&lt;p&gt;bgsave 开始时会 fork 主进程得到子进程，子进程共享主进程的内存数据。完成 fork 后读取内存数据并写入 RDB 文件。&lt;/p&gt;
&lt;p&gt;fork 采用的是&lt;span class=&#34;red&#34;&gt; copy-on-write&lt;/span&gt; 技术：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当主进程执行读操作时，访问共享内存；&lt;/li&gt;
&lt;li&gt;当主进程执行写操作时，则会拷贝一份数据，执行写操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725151319695.png&#34; alt=&#34;image-20210725151319695&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;小结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小结&#34;&gt;#&lt;/a&gt; 🎈小结&lt;/h3&gt;
&lt;p&gt;RDB 方式 bgsave 的基本流程？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fork 主进程得到一个子进程，共享内存空间&lt;/li&gt;
&lt;li&gt;子进程读取内存数据并写入新的 RDB 文件&lt;/li&gt;
&lt;li&gt;用新 RDB 文件替换旧的 RDB 文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RDB 会在什么时候执行？save 60 1000 代表什么含义？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;默认是服务停止时&lt;/li&gt;
&lt;li&gt;代表 60 秒内至少执行 1000 次修改则触发 RDB&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RDB 的缺点？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RDB 执行间隔时间长，两次 RDB 之间写入数据有丢失的风险&lt;/li&gt;
&lt;li&gt;fork 子进程、压缩、写出 RDB 文件都比较耗时&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;aof-持久化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aof-持久化&#34;&gt;#&lt;/a&gt; 🎁AOF 持久化&lt;/h2&gt;
&lt;h3 id=&#34;aof原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aof原理&#34;&gt;#&lt;/a&gt; 🎈AOF 原理&lt;/h3&gt;
&lt;p&gt;AOF 全称为 Append Only File（追加文件）。Redis 处理的每一个写命令都会记录在 AOF 文件，可以看做是命令日志文件。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725151543640.png&#34; alt=&#34;image-20210725151543640&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;aof-配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aof-配置&#34;&gt;#&lt;/a&gt; 🎈AOF 配置&lt;/h3&gt;
&lt;p&gt;AOF 默认是关闭的，需要修改 redis.conf 配置文件来开启 AOF：&lt;/p&gt;
&lt;figure class=&#34;highlight properties&#34;&gt;&lt;figcaption data-lang=&#34;.properties&#34;&gt;&lt;span&gt;redis.conf&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 是否开启 AOF 功能，默认是 no&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;appendonly&lt;/span&gt; &lt;span class=&#34;token value attr-value&#34;&gt;yes&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# AOF 文件的名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;appendfilename&lt;/span&gt; &lt;span class=&#34;token value attr-value&#34;&gt;&#34;appendonly.aof&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;AOF 的命令记录的频率也可以通过 redis.conf 文件来配：&lt;/p&gt;
&lt;figure class=&#34;highlight properties&#34;&gt;&lt;figcaption data-lang=&#34;.properties&#34;&gt;&lt;span&gt;redis.conf&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 表示每执行一次写命令，立即记录到 AOF 文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;appendfsync&lt;/span&gt; &lt;span class=&#34;token value attr-value&#34;&gt;always &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 写命令执行完先放入 AOF 缓冲区，然后表示每隔 1 秒将缓冲区数据写到 AOF 文件，是默认方案&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;appendfsync&lt;/span&gt; &lt;span class=&#34;token value attr-value&#34;&gt;everysec &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 写命令执行完先放入 AOF 缓冲区，由操作系统决定何时将缓冲区内容写回磁盘&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;appendfsync&lt;/span&gt; &lt;span class=&#34;token value attr-value&#34;&gt;no&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;三种策略对比：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725151654046.png&#34; alt=&#34;image-20210725151654046&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;aof-文件重写&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aof-文件重写&#34;&gt;#&lt;/a&gt; 🎈AOF 文件重写&lt;/h3&gt;
&lt;p&gt;因为是记录命令，AOF 文件会比 RDB 文件大的多。而且 AOF 会记录对同一个 key 的多次写操作，但只有最后一次写操作才有意义。通过执行 bgrewriteaof 命令，可以让 AOF 文件执行重写功能，用最少的命令达到相同效果。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725151729118.png&#34; alt=&#34;image-20210725151729118&#34; /&gt;&lt;/p&gt;
&lt;p&gt;如图，AOF 原本有三个命令，但是 &lt;code&gt;set num 123 和 set num 666&lt;/code&gt;  都是对 num 的操作，第二次会覆盖第一次的值，因此第一个命令记录下来没有意义。&lt;/p&gt;
&lt;p&gt;所以重写命令后，AOF 文件内容就是： &lt;code&gt;mset name jack num 666&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Redis 也会在触发阈值时自动去重写 AOF 文件。阈值也可以在 redis.conf 中配置：&lt;/p&gt;
&lt;figure class=&#34;highlight properties&#34;&gt;&lt;figcaption data-lang=&#34;.properties&#34;&gt;&lt;span&gt;redis.conf&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# AOF 文件比上次文件 增长超过多少百分比则触发重写&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;auto-aof-rewrite-percentage&lt;/span&gt; &lt;span class=&#34;token value attr-value&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# AOF 文件体积最小多大以上才触发重写 &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;auto-aof-rewrite-min-size&lt;/span&gt; &lt;span class=&#34;token value attr-value&#34;&gt;64mb&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;rdb-与aof-对比&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rdb-与aof-对比&#34;&gt;#&lt;/a&gt; 🎁RDB 与 AOF 对比&lt;/h2&gt;
&lt;p&gt;RDB 和 AOF 各有自己的优缺点，如果对数据安全性要求较高，在实际开发中往往会&lt;strong&gt;结合&lt;/strong&gt;两者来使用。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725151940515.png&#34; alt=&#34;image-20210725151940515&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;redis-主从&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis-主从&#34;&gt;#&lt;/a&gt; 🎨Redis 主从&lt;/h1&gt;
&lt;h2 id=&#34;主从数据同步原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#主从数据同步原理&#34;&gt;#&lt;/a&gt; 🎁主从数据同步原理&lt;/h2&gt;
&lt;h3 id=&#34;全量同步&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#全量同步&#34;&gt;#&lt;/a&gt; 🎈全量同步&lt;/h3&gt;
&lt;p&gt;主从第一次建立连接时，会执行&lt;strong&gt;全量同步&lt;/strong&gt;，将 master 节点的所有数据都拷贝给 slave 节点&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725152222497.png&#34; alt=&#34;image-20210725152222497&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这里有一个问题，master 如何得知 salve 是第一次来连接呢？？&lt;/p&gt;
&lt;p&gt;有几个概念，可以作为判断依据：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;&lt;strong&gt;Replication Id&lt;/strong&gt;&lt;/span&gt;：简称 replid，是数据集的标记，id 一致则说明是同一数据集。每一个 master 都有唯一的 replid，slave 则会继承 master 节点的 replid&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;&lt;strong&gt;offset&lt;/strong&gt;&lt;/span&gt;：偏移量，随着记录在 repl_baklog 中的数据增多而逐渐增大。slave 完成同步时也会记录当前同步的 offset。如果 slave 的 offset 小于 master 的 offset，说明 slave 数据落后于 master，需要更新。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此 slave 做数据同步，必须向 master 声明自己的 replication id 和 offset，master 才可以判断到底需要同步哪些数据。&lt;/p&gt;
&lt;p&gt;因为 slave 原本也是一个 master，有自己的 replid 和 offset，当第一次变成 slave，与 master 建立连接时，发送的 replid 和 offset 是自己的 replid 和 offset。&lt;/p&gt;
&lt;p&gt;master 判断发现 slave 发送来的 replid 与自己的不一致，说明这是一个全新的 slave，就知道要做全量同步了。&lt;/p&gt;
&lt;p&gt;master 会将自己的 replid 和 offset 都发送给这个 slave，slave 保存这些信息。以后 slave 的 replid 就与 master 一致了。&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;因此，&lt;strong&gt;master 判断一个节点是否是第一次同步的依据，就是看 replid 是否一致&lt;/strong&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;如图：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725152700914.png&#34; alt=&#34;image-20210725152700914&#34; /&gt;&lt;/p&gt;
&lt;p&gt;完整流程描述：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;slave 节点请求增量同步&lt;/li&gt;
&lt;li&gt;master 节点判断 replid，发现不一致，拒绝增量同步&lt;/li&gt;
&lt;li&gt;master 将完整内存数据生成 RDB，发送 RDB 到 slave&lt;/li&gt;
&lt;li&gt;slave 清空本地数据，加载 master 的 RDB&lt;/li&gt;
&lt;li&gt;master 将 RDB 期间的命令记录在 repl_baklog，并持续将 log 中的命令发送给 slave&lt;/li&gt;
&lt;li&gt;slave 执行接收到的命令，保持与 master 之间的同步&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;增量同步&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#增量同步&#34;&gt;#&lt;/a&gt; 🎈增量同步&lt;/h3&gt;
&lt;p&gt;全量同步需要先做 RDB，然后将 RDB 文件通过网络传输个 slave，成本太高了。因此除了第一次做全量同步，其它大多数时候 slave 与 master 都是做&lt;strong&gt;增量同步&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;什么是增量同步？就是只更新 slave 与 master 存在差异的部分数据。如图：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725153201086.png&#34; alt=&#34;image-20210725153201086&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;repl_backlog原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#repl_backlog原理&#34;&gt;#&lt;/a&gt; 🎈repl_backlog 原理&lt;/h3&gt;
&lt;p&gt;master 怎么知道 slave 与自己的数据差异在哪里呢？&lt;/p&gt;
&lt;p&gt;这就要说到全量同步时的 repl_baklog 文件了。&lt;/p&gt;
&lt;p&gt;这个文件是一个固定大小的数组，只不过数组是环形，也就是说&lt;span class=&#34;red&#34;&gt;&lt;strong&gt;角标到达数组末尾后，会再次从 0 开始读写&lt;/strong&gt;&lt;/span&gt;，这样数组头部的数据就会被覆盖。&lt;/p&gt;
&lt;p&gt;repl_baklog 中会记录 Redis 处理过的命令日志及 offset，包括 master 当前的 offset，和 slave 已经拷贝到的 offset：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725153359022.png&#34; alt=&#34;image-20210725153359022&#34; /&gt;&lt;/p&gt;
&lt;p&gt;slave 与 master 的 offset 之间的差异，就是 salve 需要增量拷贝的数据了。&lt;/p&gt;
&lt;p&gt;随着不断有数据写入，master 的 offset 逐渐变大，slave 也不断的拷贝，追赶 master 的 offset：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725153524190.png&#34; alt=&#34;image-20210725153524190&#34; /&gt;&lt;/p&gt;
&lt;p&gt;直到数组被填满：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725153715910.png&#34; alt=&#34;image-20210725153715910&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时，如果有新的数据写入，就会覆盖数组中的旧数据。不过，旧的数据只要是绿色的，说明是已经被同步到 slave 的数据，即便被覆盖了也没什么影响。因为未同步的仅仅是红色部分。&lt;/p&gt;
&lt;p&gt;但是，如果 slave 出现网络阻塞，导致 master 的 offset 远远超过了 slave 的 offset：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725153937031.png&#34; alt=&#34;image-20210725153937031&#34; /&gt;&lt;/p&gt;
&lt;p&gt;如果 master 继续写入新数据，其 offset 就会覆盖旧的数据，直到将 slave 现在的 offset 也覆盖：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725154155984.png&#34; alt=&#34;image-20210725154155984&#34; /&gt;&lt;/p&gt;
&lt;p&gt;棕色框中的红色部分，就是尚未同步，但是却已经被覆盖的数据。此时如果 slave 恢复，需要同步，却发现自己的 offset 都没有了，无法完成增量同步了。只能做全量同步。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725154216392.png&#34; alt=&#34;image-20210725154216392&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;主从同步优化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#主从同步优化&#34;&gt;#&lt;/a&gt; 🎁主从同步优化&lt;/h2&gt;
&lt;p&gt;主从同步可以保证主从数据的一致性，非常重要。&lt;/p&gt;
&lt;p&gt;可以从以下几个方面来优化 Redis 主从就集群：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 master 中配置 repl-diskless-sync yes 启用无磁盘复制，避免全量同步时的磁盘 IO。&lt;/li&gt;
&lt;li&gt;Redis 单节点上的内存占用不要太大，减少 RDB 导致的过多磁盘 IO&lt;/li&gt;
&lt;li&gt;适当提高 repl_baklog 的大小，发现 slave 宕机时尽快实现故障恢复，尽可能避免全量同步&lt;/li&gt;
&lt;li&gt;限制一个 master 上的 slave 节点数量，如果实在是太多 slave，则可以采用主 - 从 - 从链式结构，减少 master 压力&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主从从架构图：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725154405899.png&#34; alt=&#34;image-20210725154405899&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;小结-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小结-2&#34;&gt;#&lt;/a&gt; 🎁小结&lt;/h2&gt;
&lt;p&gt;简述全量同步和增量同步区别？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全量同步：master 将完整内存数据生成 RDB，发送 RDB 到 slave。后续命令则记录在 repl_baklog，逐个发送给 slave。&lt;/li&gt;
&lt;li&gt;增量同步：slave 提交自己的 offset 到 master，master 获取 repl_baklog 中从 offset 之后的命令给 slave&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;什么时候执行全量同步？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;slave 节点第一次连接 master 节点时&lt;/li&gt;
&lt;li&gt;slave 节点断开时间太久，repl_baklog 中的 offset 已经被覆盖时&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;什么时候执行增量同步？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;slave 节点断开又恢复，并且在 repl_baklog 中能找到 offset 时&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;redis哨兵&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis哨兵&#34;&gt;#&lt;/a&gt; 🎨Redis 哨兵&lt;/h1&gt;
&lt;p&gt;Redis 提供了哨兵（Sentinel）机制来实现主从集群的自动故障恢复。&lt;/p&gt;
&lt;h2 id=&#34;哨兵原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#哨兵原理&#34;&gt;#&lt;/a&gt; 🎁哨兵原理&lt;/h2&gt;
&lt;h3 id=&#34;集群结构和作用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#集群结构和作用&#34;&gt;#&lt;/a&gt; 🎈集群结构和作用&lt;/h3&gt;
&lt;p&gt;哨兵的结构如图：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725154528072.png&#34; alt=&#34;image-20210725154528072&#34; /&gt;&lt;/p&gt;
&lt;p&gt;哨兵的作用如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;&lt;strong&gt;监控&lt;/strong&gt;&lt;/span&gt;：Sentinel 会不断检查您的 master 和 slave 是否按预期工作&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;&lt;strong&gt;自动故障恢复&lt;/strong&gt;&lt;/span&gt;：如果 master 故障，Sentinel 会将一个 slave 提升为 master。当故障实例恢复后也以新的 master 为主&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;&lt;strong&gt;通知&lt;/strong&gt;&lt;/span&gt;：Sentinel 充当 Redis 客户端的服务发现来源，当集群发生故障转移时，会将最新信息推送给 Redis 的客户端&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;集群监控原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#集群监控原理&#34;&gt;#&lt;/a&gt; 🎈集群监控原理&lt;/h3&gt;
&lt;p&gt;Sentinel 基于&lt;span class=&#34;red&#34;&gt;心跳机制&lt;/span&gt;监测服务状态，每隔 1 秒向集群的每个实例发送&lt;span class=&#34;red&#34;&gt; ping&lt;/span&gt; 命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;主观下线&lt;/span&gt;：如果某 sentinel 节点发现某实例未在规定时间响应，则认为该实例&lt;strong&gt;主观下线&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;客观下线&lt;/span&gt;：若超过指定数量（quorum）的 sentinel 都认为该实例主观下线，则该实例&lt;strong&gt;客观下线&lt;/strong&gt;。quorum 值最好超过 Sentinel 实例数量的一半。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725154632354.png&#34; alt=&#34;image-20210725154632354&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;集群故障恢复原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#集群故障恢复原理&#34;&gt;#&lt;/a&gt; 🎈集群故障恢复原理&lt;/h3&gt;
&lt;p&gt;一旦发现 master 故障，sentinel 需要在 salve 中选择一个作为新的 master，选择依据是这样的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先会判断 slave 节点与 master 节点断开时间长短，如果超过指定值（down-after-milliseconds * 10）则会排除该 slave 节点&lt;/li&gt;
&lt;li&gt;然后判断 slave 节点的 slave-priority 值，越小优先级越高，如果是 0 则永不参与选举&lt;/li&gt;
&lt;li&gt;如果 slave-prority 一样，则判断 slave 节点的 offset 值，越大说明数据越新，优先级越高&lt;/li&gt;
&lt;li&gt;最后是判断 slave 节点的运行 id 大小，越小优先级越高。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当选出一个新的 master 后，该如何实现切换呢？&lt;/p&gt;
&lt;p&gt;流程如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sentinel 给备选的 slave1 节点发送 slaveof no one 命令，让该节点成为 master&lt;/li&gt;
&lt;li&gt;sentinel 给所有其它 slave 发送 slaveof 192.168.150.101 7002 命令，让这些 slave 成为新 master 的从节点，开始从新的 master 上同步数据。&lt;/li&gt;
&lt;li&gt;最后，sentinel 将故障节点标记为 slave，当故障节点恢复后会自动成为新的 master 的 slave 节点&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725154816841.png&#34; alt=&#34;image-20210725154816841&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;小结-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小结-3&#34;&gt;#&lt;/a&gt; 🎁小结&lt;/h2&gt;
&lt;p&gt;Sentinel 的三个作用是什么？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;监控&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;故障转移&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;通知&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sentinel 如何判断一个 redis 实例是否健康？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每隔 1 秒发送一次 ping 命令，如果超过一定时间没有相向则认为是主观下线&lt;/li&gt;
&lt;li&gt;如果大多数 sentinel 都认为实例主观下线，则判定服务下线&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;故障转移步骤有哪些？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先选定一个 slave 作为新的 master，执行 slaveof no one&lt;/li&gt;
&lt;li&gt;然后让所有节点都执行 slaveof 新 master&lt;/li&gt;
&lt;li&gt;修改故障节点配置，添加 slaveof 新 master&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;redistemplate&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redistemplate&#34;&gt;#&lt;/a&gt; 🎁RedisTemplate&lt;/h2&gt;
&lt;p&gt;在 Sentinel 集群监管下的 Redis 主从集群，其节点会因为自动故障转移而发生变化，Redis 的客户端必须感知这种变化，及时更新连接信息。Spring 的 RedisTemplate 底层利用 lettuce 实现了节点的感知和自动切换。&lt;/p&gt;
&lt;h3 id=&#34;配置redis地址&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置redis地址&#34;&gt;#&lt;/a&gt; 🎈配置 Redis 地址&lt;/h3&gt;
&lt;p&gt;然后在配置文件 application.yml 中指定 redis 的 sentinel 相关信息：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;span&gt;application.yml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  redis&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sentinel&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      master&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; mymaster&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      nodes&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.150&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.101&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;27001&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.150&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.101&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;27002&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.150&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.101&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;27003&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;配置读写分离&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置读写分离&#34;&gt;#&lt;/a&gt; 🎈配置读写分离&lt;/h3&gt;
&lt;p&gt;在项目的启动类中，添加一个新的 bean：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Bean&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;LettuceClientConfigurationBuilderCustomizer&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;clientConfigurationBuilderCustomizer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; clientConfigurationBuilder &lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt; clientConfigurationBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;readFrom&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ReadFrom&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;REPLICA_PREFERRED&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这个 bean 中配置的就是读写策略，包括四种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;MASTER&lt;/span&gt;：从主节点读取&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;MASTER_PREFERRED&lt;/span&gt;：优先从 master 节点读取，master 不可用才读取 replica&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;REPLICA&lt;/span&gt;：从 slave（replica）节点读取&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;REPLICA _PREFERRED&lt;/span&gt;：优先从 slave（replica）节点读取，所有的 slave 都不可用才读取 master&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;redis分片集群&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis分片集群&#34;&gt;#&lt;/a&gt; 🎨Redis 分片集群&lt;/h1&gt;
&lt;h2 id=&#34;分片集群&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分片集群&#34;&gt;#&lt;/a&gt; 🎁分片集群&lt;/h2&gt;
&lt;p&gt;主从和哨兵可以解决高可用、高并发读的问题。但是依然有两个问题没有解决：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;海量数据存储问题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;高并发写的问题&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用分片集群可以解决上述问题，如图:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725155747294.png&#34; alt=&#34;image-20210725155747294&#34; /&gt;&lt;/p&gt;
&lt;p&gt;分片集群特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;集群中有多个 master，每个 master 保存不同数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每个 master 都可以有多个 slave 节点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;master 之间通过 ping 监测彼此健康状态&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;客户端请求可以访问集群任意节点，最终都会被转发到正确节点&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;散列插槽&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#散列插槽&#34;&gt;#&lt;/a&gt; 🎁散列插槽&lt;/h2&gt;
&lt;h3 id=&#34;插槽原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#插槽原理&#34;&gt;#&lt;/a&gt; 🎈插槽原理&lt;/h3&gt;
&lt;p&gt;Redis 会把每一个 master 节点映射到 0~16383 共 16384 个插槽（hash slot）上，查看集群信息时就能看到：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725155820320.png&#34; alt=&#34;image-20210725155820320&#34; /&gt;&lt;/p&gt;
&lt;p&gt;数据 key 不是与节点绑定，而是与插槽绑定。redis 会根据 key 的有效部分计算插槽值，分两种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;key 中包含 &amp;quot;{}&amp;quot;，且 “{}” 中至少包含 1 个字符，“{}” 中的部分是有效部分&lt;/li&gt;
&lt;li&gt;key 中不包含 “{}”，整个 key 都是有效部分&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;小结-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小结-4&#34;&gt;#&lt;/a&gt; 🎈小结&lt;/h3&gt;
&lt;p&gt;Redis 如何判断某个 key 应该在哪个实例？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将 16384 个插槽分配到不同的实例&lt;/li&gt;
&lt;li&gt;根据 key 的有效部分计算哈希值，对 16384 取余&lt;/li&gt;
&lt;li&gt;余数作为插槽，寻找插槽所在实例即可&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如何将同一类数据固定的保存在同一个 Redis 实例？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这一类数据使用相同的有效部分，例如 key 都以 {typeId} 为前缀&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;集群伸缩&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#集群伸缩&#34;&gt;#&lt;/a&gt; 🎁集群伸缩&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;redis-cli --cluster&lt;/span&gt; 提供了很多操作集群的命令，可以通过下面方式查看：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725160138290.png&#34; alt=&#34;image-20210725160138290&#34; /&gt;&lt;/p&gt;
&lt;p&gt;比如，添加节点的命令：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725160448139.png&#34; alt=&#34;image-20210725160448139&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;故障转移&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#故障转移&#34;&gt;#&lt;/a&gt; 🎁故障转移&lt;/h2&gt;
&lt;p&gt;集群初识状态是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210727161152065.png&#34; alt=&#34;image-20210727161152065&#34; /&gt;&lt;/p&gt;
&lt;p&gt;其中 7001、7002、7003 都是 master，我们计划让 7002 宕机。&lt;/p&gt;
&lt;h3 id=&#34;自动故障转移&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自动故障转移&#34;&gt;#&lt;/a&gt; 🎈自动故障转移&lt;/h3&gt;
&lt;p&gt;当集群中有一个 master 宕机会发生什么呢？&lt;/p&gt;
&lt;p&gt;直接停止一个 redis 实例，例如 7002：&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;figcaption data-lang=&#34;sh&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;redis-cli &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7002&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;shutdown&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;1）首先是该实例与其它实例失去连接&lt;/p&gt;
&lt;p&gt;2）然后是疑似宕机：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725162319490.png&#34; alt=&#34;image-20210725162319490&#34; /&gt;&lt;/p&gt;
&lt;p&gt;3）最后是确定下线，自动提升一个 slave 为新的 master：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725162408979.png&#34; alt=&#34;image-20210725162408979&#34; /&gt;&lt;/p&gt;
&lt;p&gt;4）当 7002 再次启动，就会变为一个 slave 节点了：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210727160803386.png&#34; alt=&#34;image-20210727160803386&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;手动故障转移&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#手动故障转移&#34;&gt;#&lt;/a&gt; 🎈手动故障转移&lt;/h3&gt;
&lt;p&gt;利用 cluster failover 命令可以手动让集群中的某个 master 宕机，切换到执行 cluster failover 命令的这个 slave 节点，实现无感知的数据迁移。其流程如下：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/image-20210725162441407.png&#34; alt=&#34;image-20210725162441407&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这种 failover 命令可以指定三种模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;缺省&lt;/span&gt;：默认的流程，如图 1~6 歩&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;force&lt;/span&gt;：省略了对 offset 的一致性校验&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;takeover&lt;/span&gt;：直接执行第 5 歩，忽略数据一致性、忽略 master 状态和其它 master 的意见&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;redistemplate访问分片集群&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redistemplate访问分片集群&#34;&gt;#&lt;/a&gt; 🎁RedisTemplate 访问分片集群&lt;/h2&gt;
&lt;p&gt;RedisTemplate 底层同样基于 lettuce 实现了分片集群的支持，而使用的步骤与哨兵模式基本一致：&lt;/p&gt;
&lt;p&gt;1）引入 redis 的 starter 依赖&lt;/p&gt;
&lt;p&gt;2）配置分片集群地址&lt;/p&gt;
&lt;p&gt;3）配置读写分离&lt;/p&gt;
&lt;p&gt;与哨兵模式相比，其中只有分片集群的配置方式略有差异，如下：&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;span&gt;application.yaml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;spring&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;redis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;cluster&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;nodes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; 192.168.150.101&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7001&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; 192.168.150.101&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7002&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; 192.168.150.101&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7003&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; 192.168.150.101&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8001&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; 192.168.150.101&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8002&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; 192.168.150.101&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8003&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="Backend" scheme="https://slx-world.top/categories/backend/" />
        <category term="Database" scheme="https://slx-world.top/categories/backend/database/" />
        <category term="Redis" scheme="https://slx-world.top/tags/redis/" />
        <updated>2024-10-21T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/backend/database/redis/introduction/</id>
        <title>Redis 入门篇</title>
        <link rel="alternate" href="https://slx-world.top/backend/database/redis/introduction/"/>
        <content type="html">&lt;h1 id=&#34;️redis-常见命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#️redis-常见命令&#34;&gt;#&lt;/a&gt; ☎️Redis 常见命令&lt;/h1&gt;
&lt;h2 id=&#34;redis-数据结构介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis-数据结构介绍&#34;&gt;#&lt;/a&gt; 📞Redis 数据结构介绍&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/1652887393157.png&#34; alt=&#34;1652887393157&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;Redis 为了方便我们学习，将操作不同数据类型的命令也做了分组，在官网（ &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yZWRpcy5pby9jb21tYW5kcw==&#34;&gt;https://redis.io/commands&lt;/span&gt; ）可以查看到不同的命令：&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/1652887648826.png&#34; alt=&#34;1652887648826&#34; /&gt;&lt;/p&gt;
&lt;p&gt;当然我们也可以通过 &lt;span class=&#34;red&#34;&gt;Help&lt;/span&gt; 命令来帮助我们去查看命令&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/1652887748279.png&#34; alt=&#34;1652887748279&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;redis-通用命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis-通用命令&#34;&gt;#&lt;/a&gt; 📞Redis 通用命令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;KEYS&lt;/span&gt;：查看符合模板的所有 key&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;DEL&lt;/span&gt;：删除一个指定的 key&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;EXISTS&lt;/span&gt;：判断 key 是否存在&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;EXPIRE&lt;/span&gt;：给一个 key 设置有效期，有效期到期时该 key 会被自动删除&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;TTL&lt;/span&gt;：查看一个 KEY 的剩余有效期&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过 &lt;span class=&#34;red&#34;&gt;help [command]&lt;/span&gt; 可以查看一个命令的具体用法，例如：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/1652887865189.png&#34; alt=&#34;1652887865189&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;redis-命令-string-命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis-命令-string-命令&#34;&gt;#&lt;/a&gt; 📞Redis 命令 —— String 命令&lt;/h2&gt;
&lt;p&gt;String 类型，也就是字符串类型，是 Redis 中最简单的存储类型。&lt;/p&gt;
&lt;p&gt;其 value 是字符串，不过根据字符串的格式不同，又可以分为 3 类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;string：普通字符串&lt;/li&gt;
&lt;li&gt;int：整数类型，可以做自增。自减操作&lt;/li&gt;
&lt;li&gt;float：浮点类型，可以做自增。自减操作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/1652890121291.png&#34; alt=&#34;1652890121291&#34; /&gt;&lt;/p&gt;
&lt;p&gt;String 的常见命令有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;SET&lt;/span&gt;：添加或者修改已经存在的一个 String 类型的键值对&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;GET&lt;/span&gt;：根据 key 获取 String 类型的 value&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;MSET&lt;/span&gt;：批量添加多个 String 类型的键值对&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;MGET&lt;/span&gt;：根据多个 key 获取多个 String 类型的 value&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;INCR&lt;/span&gt;：让一个整型的 key 自增 1&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;INCRBY&lt;/span&gt;: 让一个整型的 key 自增并指定步长，例如：incrby num 2 让 num 值自增 2&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;INCRBYFLOAT&lt;/span&gt;：让一个浮点类型的数字自增并指定步长&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;SETNX&lt;/span&gt;：添加一个 String 类型的键值对，前提是这个 key 不存在，否则不执行&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;SETEX&lt;/span&gt;：添加一个 String 类型的键值对，并且指定有效期&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;note warning&#34;&gt;
&lt;p&gt;SET 和 GET: 如果 key 不存在则是新增，如果存在则是修改&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;redis-命令-key-的层级结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis-命令-key-的层级结构&#34;&gt;#&lt;/a&gt; 📞Redis 命令 —— Key 的层级结构&lt;/h2&gt;
&lt;p&gt;Redis 的 key 允许有多个单词形成层级结构，多个单词之间用 &#39;:&#39; 隔开，格式如下：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/1652941631682.png&#34; alt=&#34;1652941631682&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这个格式并非固定，也可以根据自己的需求来删除或添加词条。&lt;/p&gt;
&lt;h2 id=&#34;redis-命令-hash-命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis-命令-hash-命令&#34;&gt;#&lt;/a&gt; 📞Redis 命令 —— Hash 命令&lt;/h2&gt;
&lt;p&gt;Hash 类型，也叫散列，其 value 是一个无序字典，类似于 Java 中的 HashMap 结构。&lt;/p&gt;
&lt;p&gt;String 结构是将对象序列化为 JSON 字符串后存储，当需要修改对象某个字段时很不方便：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/1652941995945.png&#34; alt=&#34;1652941995945&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Hash 结构可以将对象中的每个字段独立存储，可以针对单个字段做 CRUD：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/1652942027719.png&#34; alt=&#34;1652942027719&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hash 类型的常见命令&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;HSET key field value&lt;/span&gt;：添加或者修改 hash 类型 key 的 field 的值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;HGET key field&lt;/span&gt;：获取一个 hash 类型 key 的 field 的值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;HMSET&lt;/span&gt;：批量添加多个 hash 类型 key 的 field 的值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;HMGET&lt;/span&gt;：批量获取多个 hash 类型 key 的 field 的值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;HGETALL&lt;/span&gt;：获取一个 hash 类型的 key 中的所有的 field 和 value&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;HKEYS&lt;/span&gt;：获取一个 hash 类型的 key 中的所有的 field&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;HINCRBY&lt;/span&gt;: 让一个 hash 类型 key 的字段值自增并指定步长&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;HSETNX&lt;/span&gt;：添加一个 hash 类型的 key 的 field 值，前提是这个 field 不存在，否则不执行&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;redis-命令-list-命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis-命令-list-命令&#34;&gt;#&lt;/a&gt; 📞Redis 命令 —— List 命令&lt;/h2&gt;
&lt;p&gt;Redis 中的 List 类型与 Java 中的 LinkedList 类似，可以看做是一个双向链表结构。既可以支持正向检索和也可以支持反向检索。&lt;/p&gt;
&lt;p&gt;特征也与 LinkedList 类似：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有序&lt;/li&gt;
&lt;li&gt;元素可以重复&lt;/li&gt;
&lt;li&gt;插入和删除快&lt;/li&gt;
&lt;li&gt;查询速度一般&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常用来存储一个有序数据，例如：朋友圈点赞列表，评论列表等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;List 的常见命令有：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;LPUSH key element ...&lt;/span&gt; ：向列表左侧插入一个或多个元素&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;LPOP key&lt;/span&gt;：移除并返回列表左侧的第一个元素，没有则返回 nil&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;RPUSH key element ... &lt;/span&gt;：向列表右侧插入一个或多个元素&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;RPOP key&lt;/span&gt;：移除并返回列表右侧的第一个元素&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;LRANGE key star end&lt;/span&gt;：返回一段角标范围内的所有元素&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;BLPOP 和 BRPOP&lt;/span&gt;：与 LPOP 和 RPOP 类似，只不过在没有元素时等待指定时间，而不是直接返回 nil&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/1652943604992.png&#34; alt=&#34;1652943604992&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;redis-命令-set-命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis-命令-set-命令&#34;&gt;#&lt;/a&gt; 📞Redis 命令 —— Set 命令&lt;/h2&gt;
&lt;p&gt;Redis 的 Set 结构与 Java 中的 HashSet 类似，可以看做是一个 value 为 null 的 HashMap。因为也是一个 hash 表，因此具备与 HashSet 类似的特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无序&lt;/li&gt;
&lt;li&gt;元素不可重复&lt;/li&gt;
&lt;li&gt;查找快&lt;/li&gt;
&lt;li&gt;支持交集。并集。差集等功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Set 类型的常见命令&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;SADD key member ... &lt;/span&gt;：向 set 中添加一个或多个元素&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;SREM key member ... &lt;/span&gt;: 移除 set 中的指定元素&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;SCARD key&lt;/span&gt;： 返回 set 中元素的个数&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;SISMEMBER key member&lt;/span&gt;：判断一个元素是否存在于 set 中&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;SMEMBERS&lt;/span&gt;：获取 set 中的所有元素&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;SINTER key1 key2 ... &lt;/span&gt;：求 key1 与 key2 的交集&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;SDIFF key1 key2 ... &lt;/span&gt;：求 key1 与 key2 的差集&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;SUNION key1 key2 ..&lt;/span&gt;：求 key1 和 key2 的并集&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;redis-命令-sortedset-类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis-命令-sortedset-类型&#34;&gt;#&lt;/a&gt; 📞Redis 命令 —— SortedSet 类型&lt;/h2&gt;
&lt;p&gt;Redis 的 SortedSet 是一个可排序的 set 集合，与 Java 中的 TreeSet 有些类似，但底层数据结构却差别很大。SortedSet 中的每一个元素都带有一个 &lt;span class=&#34;red&#34;&gt;score&lt;/span&gt; 属性，可以基于 score 属性对元素排序，底层的实现是一个&lt;span class=&#34;red&#34;&gt;跳表（SkipList）&lt;/span&gt;加  &lt;span class=&#34;red&#34;&gt;hash&lt;/span&gt; 表。&lt;/p&gt;
&lt;p&gt;SortedSet 具备下列特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可排序&lt;/li&gt;
&lt;li&gt;元素不重复&lt;/li&gt;
&lt;li&gt;查询速度快&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为 SortedSet 的可排序特性，经常被用来实现排行榜这样的功能。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SortedSet 的常见命令有：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;ZADD key score member&lt;/span&gt;：添加一个或多个元素到 sorted set ，如果已经存在则更新其 score 值&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;ZREM key member&lt;/span&gt;：删除 sorted set 中的一个指定元素&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;ZSCORE key member &lt;/span&gt;: 获取 sorted set 中的指定元素的 score 值&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;ZRANK key member&lt;/span&gt;：获取 sorted set 中的指定元素的排名&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;ZCARD key&lt;/span&gt;：获取 sorted set 中的元素个数&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;ZCOUNT key min max&lt;/span&gt;：统计 score 值在给定范围内的所有元素的个数&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;ZINCRBY key increment member&lt;/span&gt;：让 sorted set 中的指定元素自增，步长为指定的 increment 值&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;ZRANGE key min max&lt;/span&gt;：按照 score 排序后，获取指定排名范围内的元素&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;ZRANGEBYSCORE key min max&lt;/span&gt;：按照 score 排序后，获取指定 score 范围内的元素&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;ZDIFF.ZINTER.ZUNION&lt;/span&gt;：求差集。交集。并集&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;所有的排名默认都是升序，如果要降序则在命令的 Z 后面添加 REV 即可，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;升序&lt;/strong&gt;获取 sorted set 中的指定元素的排名：ZRANK key member&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;降序&lt;/strong&gt;获取 sorted set 中的指定元素的排名：ZREVRANK key memeber&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id=&#34;️redis-的-java-客户端-springdataredis&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#️redis-的-java-客户端-springdataredis&#34;&gt;#&lt;/a&gt; ☎️Redis 的 Java 客户端 —— SpringDataRedis&lt;/h1&gt;
&lt;p&gt;SpringData 是 Spring 中数据操作的模块，包含对各种数据库的集成，其中对 Redis 的集成模块就叫做 SpringDataRedis，官网地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcHJpbmcuaW8vcHJvamVjdHMvc3ByaW5nLWRhdGEtcmVkaXM=&#34;&gt;https://spring.io/projects/spring-data-redis&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供了对不同 Redis 客户端的整合（Lettuce 和 Jedis）&lt;/li&gt;
&lt;li&gt;提供了 RedisTemplate 统一 API 来操作 Redis&lt;/li&gt;
&lt;li&gt;支持 Redis 的发布订阅模型&lt;/li&gt;
&lt;li&gt;支持 Redis 哨兵和 Redis 集群&lt;/li&gt;
&lt;li&gt;支持基于 Lettuce 的响应式编程&lt;/li&gt;
&lt;li&gt;支持基于 JDK.JSON. 字符串.Spring 对象的数据序列化及反序列化&lt;/li&gt;
&lt;li&gt;支持基于 Redis 的 JDKCollection 实现&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SpringDataRedis 中提供了 RedisTemplate 工具类，其中封装了各种对 Redis 的操作。并且将不同数据类型的操作 API 封装到了不同的类型中：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/backend/database/redis/1652976773295.png&#34; alt=&#34;1652976773295&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;SpringDataRedis 的使用步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;引入 spring-boot-starter-data-redis 依赖&lt;/li&gt;
&lt;li&gt;在 application.yml 配置 Redis 信息&lt;/li&gt;
&lt;li&gt;注入 RedisTemplate&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id=&#34;redis-数据序列化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis-数据序列化&#34;&gt;#&lt;/a&gt; 📞Redis 数据序列化&lt;/h2&gt;
&lt;p&gt;RedisTemplate 的两种序列化实践方案：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;方案一：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自定义 RedisTemplate&lt;/li&gt;
&lt;li&gt;修改 RedisTemplate 的序列化器为 GenericJackson2JsonRedisSerializer&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方案二：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 StringRedisTemplate&lt;/li&gt;
&lt;li&gt;写入 Redis 时，手动把对象序列化为 JSON&lt;/li&gt;
&lt;li&gt;读取 Redis 时，手动把读取到的 JSON 反序列化为对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="Backend" scheme="https://slx-world.top/categories/backend/" />
        <category term="Database" scheme="https://slx-world.top/categories/backend/database/" />
        <category term="Redis" scheme="https://slx-world.top/tags/redis/" />
        <updated>2024-10-19T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/test/test-basis/day05/</id>
        <title>测试基础 Day05</title>
        <link rel="alternate" href="https://slx-world.top/test/test-basis/day05/"/>
        <content type="html"></content>
        <category term="Test" scheme="https://slx-world.top/categories/test/" />
        <category term="Test-Basis" scheme="https://slx-world.top/tags/test-basis/" />
        <updated>2024-10-13T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/test/test-basis/day04/</id>
        <title>测试基础 Day04</title>
        <link rel="alternate" href="https://slx-world.top/test/test-basis/day04/"/>
        <content type="html">&lt;h1 id=&#34;html-介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#html-介绍&#34;&gt;#&lt;/a&gt; 🌺HTML 介绍&lt;/h1&gt;
&lt;p&gt;Web 前端三大核心技术&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;HTML&lt;/span&gt;：负责网页的架构&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;CSS&lt;/span&gt;：负责网页的样式、美化&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;JS&lt;/span&gt;：负责网页的行为&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;什么是 HTML&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTML 是用来描述网页的一种语言&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HTML 标签&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;rainbow&#34;&gt;单标签&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;span&gt;单标签&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;rainbow&#34;&gt;双标签&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;span&gt;双标签&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 内容 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;b&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;标签属性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;属性格式：属性名 = &amp;quot;属性值&amp;quot;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;span&gt;标签属性&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;http://www.jd.com&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 京东 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;html-常用标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#html-常用标签&#34;&gt;#&lt;/a&gt; 🌺HTML 常用标签&lt;/h1&gt;
&lt;h2 id=&#34;标题标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#标题标签&#34;&gt;#&lt;/a&gt; 🌱标题标签&lt;/h2&gt;
&lt;p&gt;HTML 标题是通过 &lt;span class=&#34;red&#34;&gt;&amp;lt;h1&amp;gt; - &amp;lt;h6&amp;gt;&lt;/span&gt; 等标签进行定义&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;span&gt;标题标签&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 一号标题 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 二号标题 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 三号标题 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 四号标题 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 五号标题 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;h6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 六号标题 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;h6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;段落标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#段落标签&#34;&gt;#&lt;/a&gt; 🌱段落标签&lt;/h2&gt;
&lt;p&gt;HTML 段落是通过 &lt;span class=&#34;red&#34;&gt;&amp;lt;p&amp;gt;&lt;/span&gt; 标签进行定义的&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;span&gt;段落标签&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 段落 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 段落 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;超链接标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#超链接标签&#34;&gt;#&lt;/a&gt; 🌱超链接标签&lt;/h2&gt;
&lt;p&gt;超链接是通过 &lt;span class=&#34;red&#34;&gt;&amp;lt;a&amp;gt;&lt;/span&gt; 标签进行定义的&lt;/p&gt;
&lt;p&gt;属性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;href&lt;/span&gt;：跳转地址&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;target&lt;/span&gt;：新窗口打开&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;span&gt;超链接标签&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;http://www.baidu.com&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;target&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;_blank&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 百度 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;图片标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#图片标签&#34;&gt;#&lt;/a&gt; 🌱图片标签&lt;/h2&gt;
&lt;p&gt;HTML 图片是通过 &lt;span class=&#34;red&#34;&gt;&amp;lt;img&amp;gt;&lt;/span&gt; 标签进行定义的&lt;/p&gt;
&lt;p&gt;属性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;src&lt;/span&gt;：图片路径&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;title&lt;/span&gt;：光标悬停显示文字&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;alt&lt;/span&gt;：图片未加载时显示文字&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;width&lt;/span&gt;：图片宽度&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;height&lt;/span&gt;：图片高度&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;span&gt;图片标签&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;alt&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;换行和空格&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#换行和空格&#34;&gt;#&lt;/a&gt; 🌱换行和空格&lt;/h2&gt;
&lt;p&gt;换行：&lt;span class=&#34;red&#34;&gt;&amp;lt;br/&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;空格：&lt;span class=&#34;red&#34;&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;span&gt;换行和空格&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 1、换行 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    换行 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt; 换行&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 2、空格 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    空格 &lt;span class=&#34;token entity named-entity&#34; title=&#34;&amp;nbsp;&#34;&gt;&amp;amp;nbsp;&lt;/span&gt; 空格&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;布局标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#布局标签&#34;&gt;#&lt;/a&gt; 🌱布局标签&lt;/h2&gt;
&lt;p&gt;页面布局常用 &lt;span class=&#34;red&#34;&gt;&amp;lt;div&amp;gt; &amp;lt;/div&amp;gt;&lt;/span&gt; 和 &lt;span class=&#34;red&#34;&gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;span&gt;布局标签&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 1、大盒子 —— div 布局 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        大盒子&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 2、小盒子 —— span 布局 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 小盒子 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 小盒子 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;列表标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#列表标签&#34;&gt;#&lt;/a&gt; 🌱列表标签&lt;/h2&gt;
&lt;p&gt;列表标签常用 &lt;span class=&#34;red&#34;&gt;li&lt;/span&gt; 元素（分为：&lt;span class=&#34;yellow&#34;&gt;有序&lt;/span&gt;和&lt;span class=&#34;yellow&#34;&gt;无序&lt;/span&gt;）&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;span&gt;列表标签&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 1、有序列表 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;ol&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 有序列表 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 有序列表 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;ol&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 2、无序列表 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 无序列表 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; 无序列表 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;表单标签&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表单标签&#34;&gt;#&lt;/a&gt; 🌱表单标签&lt;/h2&gt;
&lt;p&gt;页面提交输入信息需要使用表单标签 &lt;span class=&#34;red&#34;&gt;&amp;lt;form&amp;gt;&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;span&gt;表单标签&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;form&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        文本框 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        密码框 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;password&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- name 的值相同为一组，一组内只能选择 1 个 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        单选按钮 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;radio&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;相同&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        复选框 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;checkbox&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 按钮 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        1、普通按钮 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;button&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        2、重置按钮 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;reset&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        3、提交按钮 &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;input&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;submit&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;form&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="Test" scheme="https://slx-world.top/categories/test/" />
        <category term="Test-Basis" scheme="https://slx-world.top/tags/test-basis/" />
        <updated>2024-10-12T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/backend/ssm/spring/day03/</id>
        <title>Spring_day03</title>
        <link rel="alternate" href="https://slx-world.top/backend/ssm/spring/day03/"/>
        <content type="html">&lt;h1 id=&#34;aop-核心概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aop-核心概念&#34;&gt;#&lt;/a&gt; AOP 核心概念&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;连接点（JoinPoint）：程序执行过程中的任意位置，粒度为执行方法、抛出异常、设置变量等&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 SpringAOP 中，理解为方法的执行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;切入点（Pointcut）：匹配连接点的式子&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 SpringAOP 中，一个切入点可以描述一个具体方法，也可也匹配多个方法
&lt;ul&gt;
&lt;li&gt;一个具体的方法：如 com.itheima.dao 包下的 BookDao 接口中的无形参无返回值的 save 方法&lt;/li&gt;
&lt;li&gt;匹配多个方法：所有的 save 方法，所有的 get 开头的方法，所有以 Dao 结尾的接口中的任意方法，所有带有一个参数的方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;连接点范围要比切入点范围大，是切入点的方法也一定是连接点，但是是连接点的方法就不一定要被增强，所以可能不是切入点。&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通知（Advice）：在切入点处执行的操作，也就是共性功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 SpringAOP 中，功能最终以方法的形式呈现&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通知类：定义通知的类&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;切面（Aspect）：描述通知与切入点的对应关系&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;知识点1enableaspectjautoproxy&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识点1enableaspectjautoproxy&#34;&gt;#&lt;/a&gt; 知识点 1：@EnableAspectJAutoProxy&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;@EnableAspectJAutoProxy&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;类型&lt;/td&gt;
&lt;td&gt;配置类注解&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;位置&lt;/td&gt;
&lt;td&gt;配置类定义上方&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;作用&lt;/td&gt;
&lt;td&gt;开启注解格式 AOP 功能&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;知识点2aspect&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识点2aspect&#34;&gt;#&lt;/a&gt; 知识点 2：@Aspect&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;@Aspect&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;类型&lt;/td&gt;
&lt;td&gt;类注解&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;位置&lt;/td&gt;
&lt;td&gt;切面类定义上方&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;作用&lt;/td&gt;
&lt;td&gt;设置当前类为 AOP 切面类&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;知识点3pointcut&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识点3pointcut&#34;&gt;#&lt;/a&gt; 知识点 3：@Pointcut&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;@Pointcut&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;类型&lt;/td&gt;
&lt;td&gt;方法注解&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;位置&lt;/td&gt;
&lt;td&gt;切入点方法定义上方&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;作用&lt;/td&gt;
&lt;td&gt;设置切入点方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;value（默认）：切入点表达式&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;知识点4before&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识点4before&#34;&gt;#&lt;/a&gt; 知识点 4：@Before&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;@Before&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;类型&lt;/td&gt;
&lt;td&gt;方法注解&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;位置&lt;/td&gt;
&lt;td&gt;通知方法定义上方&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;作用&lt;/td&gt;
&lt;td&gt;设置当前通知方法与切入点之间的绑定关系，当前通知方法在原始切入点方法前运行&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;aop-工作流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aop-工作流程&#34;&gt;#&lt;/a&gt; AOP 工作流程&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Spring 容器启动&lt;/li&gt;
&lt;li&gt;读取所有切面配置中的切入点&lt;/li&gt;
&lt;li&gt;初始化 bean&lt;/li&gt;
&lt;li&gt;获取 bean，执行方法&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;目标对象 (Target)：原始功能去掉共性功能对应的类产生的对象，这种对象是无法直接完成最终工作的&lt;/li&gt;
&lt;li&gt;代理 (Proxy)：目标对象无法直接完成工作，需要对其进行功能回填，通过原始对象的代理对象实现&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目标对象就是要增强的类对应的对象，也叫原始对象，不能说它不能运行，只能说它在运行的过程中对于要增强的内容是缺失的。&lt;/p&gt;
&lt;p&gt;SpringAOP 是在不改变原有设计（代码）的前提下对其进行增强的，它的底层采用的是代理模式实现的，所以要对原始对象进行增强，就需要对原始对象创建代理对象，在代理对象中的方法把通知内容加进去，就实现了增强，这就是我们所说的代理（Proxy）。&lt;/p&gt;
&lt;h1 id=&#34;aop-切入点表达式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aop-切入点表达式&#34;&gt;#&lt;/a&gt; AOP 切入点表达式&lt;/h1&gt;
&lt;h2 id=&#34;语法格式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语法格式&#34;&gt;#&lt;/a&gt; 语法格式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;切入点：要进行增强的方法&lt;/li&gt;
&lt;li&gt;切入点表达式：要进行增强的方法的描述方式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;切入点表达式标准格式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;动作关键字 (访问修饰符 返回值 包名。类 / 接口名。方法名 (参数) 异常名）&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="Backend" scheme="https://slx-world.top/categories/backend/" />
        <category term="Framework" scheme="https://slx-world.top/categories/backend/framework/" />
        <category term="Spring" scheme="https://slx-world.top/tags/spring/" />
        <updated>2024-10-12T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/bigdata/zk/zk-notes/</id>
        <title>Zookeeper 笔记</title>
        <link rel="alternate" href="https://slx-world.top/bigdata/zk/zk-notes/"/>
        <content type="html">&lt;h1 id=&#34;zookeeper-数据模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#zookeeper-数据模型&#34;&gt;#&lt;/a&gt; 🌨Zookeeper 数据模型&lt;/h1&gt;
&lt;p&gt;ZooKeeper 是一个树形目录服务，其数据模型和 Unix 的文件系统目录树很类似，拥有一个层次化结构。&lt;/p&gt;
&lt;p&gt;这里面的每一个节点都被称为： ZNode，每个节点上都会保存自己的数据和节点信息。&lt;/p&gt;
&lt;p&gt;节点可以拥有子节点，同时也允许少量（1MB）数据存储在该节点之下。&lt;/p&gt;
&lt;p&gt;节点可以分为四大类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;PERSISTENT&lt;/span&gt; 持久化节点&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;EPHEMERAL&lt;/span&gt; 临时节点 ：&lt;span class=&#34;red&#34;&gt;-e&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;PERSISTENT_SEQUENTIAL&lt;/span&gt; 持久化顺序节点 ：&lt;span class=&#34;red&#34;&gt;-s&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;EPHEMERAL_SEQUENTIAL&lt;/span&gt; 临时顺序节点  ：&lt;span class=&#34;red&#34;&gt;-es&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;zookeeper-常用命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#zookeeper-常用命令&#34;&gt;#&lt;/a&gt; 🌨Zookeeper 常用命令&lt;/h1&gt;
&lt;h2 id=&#34;️服务端常用命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#️服务端常用命令&#34;&gt;#&lt;/a&gt; ☃️服务端常用命令&lt;/h2&gt;
&lt;p&gt;启动 ZooKeeper 服务&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Zookeeper 服务端常用命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;./zkServer.sh start&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查看 ZooKeeper 服务状态&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Zookeeper 服务端常用命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;./zkServer.sh status&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;停止 ZooKeeper 服务&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Zookeeper 服务端常用命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;./zkServer.sh stop&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;重启 ZooKeeper 服务&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Zookeeper 服务端常用命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;./zkServer.sh restart&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;️客户端常用命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#️客户端常用命令&#34;&gt;#&lt;/a&gt; ☃️客户端常用命令&lt;/h2&gt;
&lt;p&gt;连接 ZooKeeper 服务端&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Zookeeper 服务端常用命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;./zkCli.sh –server ip:port&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;断开连接&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Zookeeper 服务端常用命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;quit&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查看命令帮助&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Zookeeper 服务端常用命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;help&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;显示指定目录下节点&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Zookeeper 服务端常用命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; 目录&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;创建节点&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Zookeeper 服务端常用命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create /节点path value&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;获取节点值&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Zookeeper 服务端常用命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;get /节点path&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;设置节点值&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Zookeeper 服务端常用命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;set&lt;/span&gt; /节点path value&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;删除单个节点&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Zookeeper 服务端常用命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;delete /节点path&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;删除带有子节点的节点&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Zookeeper 服务端常用命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;deleteall /节点path&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;创建临时节点&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Zookeeper 服务端常用命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create &lt;span class=&#34;token parameter variable&#34;&gt;-e&lt;/span&gt; /节点path value&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;创建顺序节点&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Zookeeper 服务端常用命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create &lt;span class=&#34;token parameter variable&#34;&gt;-s&lt;/span&gt; /节点path value&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查询节点详细信息&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Zookeeper 服务端常用命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;ls&lt;/span&gt; –s /节点path&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;czxid：节点被创建的事务 ID ctime: 创建时间 mzxid: 最后一次被更新的事务 ID mtime: 修改时间 pzxid：子节点列表最后一次被更新的事务 IDcversion：子节点的版本号&lt;/p&gt;
&lt;p&gt;dataversion：数据版本号 aclversion：权限版本号 ephemeralOwner：用于临时节点，代表临时节点的事务 ID，如果为持久节点则为 0 dataLength：节点存储的数据的长度 numChildren：当前节点的子节点个数&lt;/p&gt;
&lt;h1 id=&#34;curator-api-常用操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#curator-api-常用操作&#34;&gt;#&lt;/a&gt; 🌨Curator API 常用操作&lt;/h1&gt;
&lt;p&gt;建立连接&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加节点&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;删除节点&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改节点&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查询节点&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Watch 事件监听&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;分布式锁实现&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;zookeeper-分布式锁原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#zookeeper-分布式锁原理&#34;&gt;#&lt;/a&gt; 🌨ZooKeeper 分布式锁原理&lt;/h1&gt;
&lt;p&gt;核心思想：当客户端要获取锁，则创建节点，使用完锁，则删除该节点。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;客户端获取锁时，在 lock 节点下创建临时顺序节点。&lt;/li&gt;
&lt;li&gt;然后获取 lock 下面的所有子节点，客户端获取到所有的子节点之后，如果发现自己创建的子节点序号最小，那么就认为该客户端获取到了锁。使用完锁后，将该节点删除。&lt;/li&gt;
&lt;li&gt;如果发现自己创建的节点并非 lock 所有子节点中最小的，说明自己还没有获取到锁，此时客户端需要找到比自己小的那个节点，同时对其注册事件监听器，监听删除事件。&lt;/li&gt;
&lt;li&gt;如果发现比自己小的那个节点被删除，则客户端的 Watcher 会收到相应通知，此时再次判断自己创建的节点    是否是 lock 子节点中序号最小的，如果是则获取到了锁，    如果不是则重复以上步骤继续获取到比自己小的一个节点    并注册监听。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;curator-分布式锁-api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#curator-分布式锁-api&#34;&gt;#&lt;/a&gt; 🌨Curator 分布式锁 API&lt;/h1&gt;
&lt;p&gt;在 Curator 中有五种锁方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;InterProcessSemaphoreMutex&lt;/span&gt;：分布式排它锁（非可重入锁）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;InterProcessMutex&lt;/span&gt;：分布式可重入排它锁&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;InterProcessReadWriteLock&lt;/span&gt;：分布式读写锁&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;InterProcessMultiLock&lt;/span&gt;：将多个锁作为单个实体管理的容器&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;InterProcessSemaphoreV2&lt;/span&gt;：共享信号量&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="BigData" scheme="https://slx-world.top/categories/bigdata/" />
        <category term="Zookeeper" scheme="https://slx-world.top/tags/zk/" />
        <updated>2024-10-11T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/test/test-basis/day03/</id>
        <title>测试基础 Day03</title>
        <link rel="alternate" href="https://slx-world.top/test/test-basis/day03/"/>
        <content type="html">&lt;h1 id=&#34;缺陷介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#缺陷介绍&#34;&gt;#&lt;/a&gt; 🌺缺陷介绍&lt;/h1&gt;
&lt;h2 id=&#34;定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定义&#34;&gt;#&lt;/a&gt; 🌱定义&lt;/h2&gt;
&lt;p&gt;软件在使用过程中存在的任何&lt;span class=&#34;yellow&#34;&gt;问题&lt;/span&gt;都叫软件的缺陷，简称 bug。&lt;/p&gt;
&lt;h2 id=&#34;判断标准&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#判断标准&#34;&gt;#&lt;/a&gt; 🌱判断标准&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;软件未实现需求（规格）说明书中明确要求的功能 —— &lt;span class=&#34;rainbow&#34;&gt;少功能&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;软件出现了需求（规格）说明书中指明不应该出现的错误 —— &lt;span class=&#34;rainbow&#34;&gt;功能错误&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;软件实现的功能超出需求（规格）说明书指明的范围 —— &lt;span class=&#34;rainbow&#34;&gt;多功能&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;软件未实现需求（规格）说明书中虽未明确指明但应该实现的要求 —— &lt;span class=&#34;rainbow&#34;&gt;隐性功能错误&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;软件难于理解，不易使用，运行缓慢，用户体验不好 —— &lt;span class=&#34;rainbow&#34;&gt;不易使用&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;产生原因&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#产生原因&#34;&gt;#&lt;/a&gt; 🌱产生原因&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;需求阶段&lt;/span&gt;：需求描述不易理解，有歧义、错误等&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;设计阶段&lt;/span&gt;：设计文档存在错误或者缺陷&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;编码阶段&lt;/span&gt;：代码出现错误&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;运行阶段&lt;/span&gt;：软硬件系统本身故障导致软件缺陷&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;生命周期&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生命周期&#34;&gt;#&lt;/a&gt; 🌱生命周期&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241020000426164.png&#34; alt=&#34;image-20241020000426164&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;核心内容&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#核心内容&#34;&gt;#&lt;/a&gt; 🌱核心内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;缺陷的标题&lt;/span&gt;：描述缺陷的核心问题&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;缺陷的预置条件&lt;/span&gt;：缺陷产生的前提&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;缺陷的复选步骤&lt;/span&gt;：复选缺陷的过程&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;缺陷的预期结果&lt;/span&gt;：希望得到的结果&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;缺陷的实际结果&lt;/span&gt;：实际得到的结果&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;缺陷的必要附件&lt;/span&gt;：图片、日志等信息（证据）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;提交要素&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#提交要素&#34;&gt;#&lt;/a&gt; 🌱提交要素&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;缺陷报告编号&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;严重程度&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;缺陷优先级&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;Bug 类型&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;缺陷状态&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241020001117816.png&#34; alt=&#34;image-20241020001117816&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;缺陷类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#缺陷类型&#34;&gt;#&lt;/a&gt; 🌱缺陷类型&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;功能错误&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;界面（UI）错误&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;兼容性&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;数据&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;易用性&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;改进建议&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;架构&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;缺陷编写&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#缺陷编写&#34;&gt;#&lt;/a&gt; 🌺缺陷编写&lt;/h1&gt;
&lt;h2 id=&#34;报告示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#报告示例&#34;&gt;#&lt;/a&gt; 🌱报告示例&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;span class=&#34;rainbow&#34;&gt;缺陷 ID&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;rainbow&#34;&gt;缺陷标题&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;rainbow&#34;&gt;缺陷状态&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;rainbow&#34;&gt;严重程度&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;rainbow&#34;&gt;优先级&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;rainbow&#34;&gt;所属模块&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;rainbow&#34;&gt;缺陷描述&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;rainbow&#34;&gt;附件&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;跟踪流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#跟踪流程&#34;&gt;#&lt;/a&gt; 🌱跟踪流程&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241020001848778.png&#34; alt=&#34;image-20241020001848778&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;注意事项&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注意事项&#34;&gt;#&lt;/a&gt; 🌱注意事项&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;可重现&lt;/span&gt;：缺陷可以复现&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;规范性&lt;/span&gt;：符合公司或者项目要求&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;唯一性&lt;/span&gt;：一个缺陷上报一个问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;编写规范&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#编写规范&#34;&gt;#&lt;/a&gt; 🌱编写规范&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;准确&lt;/span&gt;：描述的信息是正确的&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;具体&lt;/span&gt;：有细节且是真实特定的&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;简洁易懂&lt;/span&gt;：描述简单容易理解&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;次序清晰&lt;/span&gt;：描述缺陷过程有条件，有先后顺序&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;管理工具&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#管理工具&#34;&gt;#&lt;/a&gt; 🌺管理工具&lt;/h1&gt;
&lt;h2 id=&#34;禅道介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#禅道介绍&#34;&gt;#&lt;/a&gt; 🌱禅道介绍&lt;/h2&gt;
&lt;p&gt;地址：&lt;ins class=&#34;info&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZW1vLnplbnRhby5uZXQvdXNlci1sb2dpbi5odG1s&#34;&gt;https://demo.zentao.net/user-login.html&lt;/span&gt;&lt;/ins&gt;&lt;/p&gt;
&lt;h2 id=&#34;禅道特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#禅道特点&#34;&gt;#&lt;/a&gt; 🌱禅道特点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;国产、免费、开源、简单、轻量级&lt;/li&gt;
&lt;li&gt;三管融合（产品管理、项目管理、质量管理）&lt;/li&gt;
&lt;li&gt;三权分立
&lt;ol&gt;
&lt;li&gt;产品部门 -—— 构想者&lt;/li&gt;
&lt;li&gt;研发部门 —— 执行者&lt;/li&gt;
&lt;li&gt;测试部门 —— 保证者&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;四角协同
&lt;ol&gt;
&lt;li&gt;产品经理&lt;/li&gt;
&lt;li&gt;项目经理&lt;/li&gt;
&lt;li&gt;研发团队&lt;/li&gt;
&lt;li&gt;测试团队&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用流程&#34;&gt;#&lt;/a&gt; 🌱使用流程&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241020072959229.png&#34; alt=&#34;image-20241020072959229&#34; /&gt;&lt;/p&gt;
</content>
        <category term="Test" scheme="https://slx-world.top/categories/test/" />
        <category term="Test-Basis" scheme="https://slx-world.top/tags/test-basis/" />
        <updated>2024-10-11T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/backend/ssm/spring/day02/</id>
        <title>Spring_day02</title>
        <link rel="alternate" href="https://slx-world.top/backend/ssm/spring/day02/"/>
        <content type="html">&lt;h1 id=&#34;加载-properties-文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#加载-properties-文件&#34;&gt;#&lt;/a&gt; 加载 properties 文件&lt;/h1&gt;
&lt;p&gt;当有多个 properties 配置文件需要被加载，该如何配置？&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationContext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token prolog&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;beans&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;xmlns&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;http://www.springframework.org/schema/beans&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;xmlns:&lt;/span&gt;xsi&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;http://www.w3.org/2001/XMLSchema-instance&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;xmlns:&lt;/span&gt;context&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;http://www.springframework.org/schema/context&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;xsi:&lt;/span&gt;schemaLocation&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            http://www.springframework.org/schema/beans&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            http://www.springframework.org/schema/beans/spring-beans.xsd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            http://www.springframework.org/schema/context&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            http://www.springframework.org/schema/context/spring-context.xsd&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 方式一 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token namespace&#34;&gt;context:&lt;/span&gt;property-placeholder&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;jdbc.properties,jdbc2.properties&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;system-properties-mode&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;NEVER&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 方式二 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token namespace&#34;&gt;context:&lt;/span&gt;property-placeholder&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;*.properties&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;system-properties-mode&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;NEVER&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 方式三 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token namespace&#34;&gt;context:&lt;/span&gt;property-placeholder&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;classpath:*.properties&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;system-properties-mode&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;NEVER&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 方式四 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token namespace&#34;&gt;context:&lt;/span&gt;property-placeholder&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;classpath*:*.properties&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;system-properties-mode&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;NEVER&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;beans&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;方式一：可以实现，如果配置文件多的话，每个都需要配置&lt;/li&gt;
&lt;li&gt;方式二： &lt;code&gt;*.properties&lt;/code&gt;  代表所有以 properties 结尾的文件都会被加载，可以解决方式一的问题，但是不标准&lt;/li&gt;
&lt;li&gt;方式三：标准的写法， &lt;code&gt;classpath:&lt;/code&gt;  代表的是从根路径下开始查找，但是只能查询当前项目的根路径&lt;/li&gt;
&lt;li&gt;方式四：不仅可以加载当前项目还可以加载当前项目所依赖的所有项目的根路径下的 properties 配置文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如何开启 context 的命名空间？&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/1629980280952.png&#34; alt=&#34;1629980280952&#34; /&gt;&lt;/p&gt;
&lt;p&gt;如何加载 properties 配置文件？&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationContext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token namespace&#34;&gt;context:&lt;/span&gt;property-placeholder&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;system-properties-mode&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;NEVER&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;如何在 applicationContext.xml 引入 properties 配置文件中的值？&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationContext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$&amp;#123;key&amp;#125;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;核心容器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#核心容器&#34;&gt;#&lt;/a&gt; 核心容器&lt;/h1&gt;
&lt;h2 id=&#34;创建方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建方式&#34;&gt;#&lt;/a&gt; 创建方式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;类路径下的 XML 配置文件&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;ApplicationContext&lt;/span&gt; ctx &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ClassPathXmlApplicationContext&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;applicationContext.xml&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件系统下的 XML 配置文件&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;ApplicationContext&lt;/span&gt; ctx &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FileSystemXmlApplicationContext&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;applicationContext.xml&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;bean-获取方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bean-获取方式&#34;&gt;#&lt;/a&gt; bean 获取方式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;方式一：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;BookDao&lt;/span&gt; bookDao &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;BookDao&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;bookDao&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方式二：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;BookDao&lt;/span&gt; bookDao &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;bookDao&#34;&lt;/span&gt;，&lt;span class=&#34;token class-name&#34;&gt;BookDao&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方式三：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;BookDao&lt;/span&gt; bookDao &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ctx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;BookDao&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;容器类层次结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#容器类层次结构&#34;&gt;#&lt;/a&gt; 容器类层次结构&lt;/h2&gt;
&lt;p&gt;（1）在 IDEA 中双击 &lt;code&gt;shift&lt;/code&gt; , 输入 BeanFactory&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/1629985148294.png&#34; alt=&#34;1629985148294&#34; /&gt;&lt;/p&gt;
&lt;p&gt;（2）点击进入 BeanFactory 类， &lt;code&gt;Ctrl+h&lt;/code&gt; ，就能查看到如下结构的层次关系&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/1629984980781.png&#34; alt=&#34;1629984980781&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;BeanFactory 是&lt;span class=&#34;yellow&#34;&gt;延迟加载&lt;/span&gt;，只有在获取 bean 对象的时候才会去创建&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ApplicationContext 是&lt;span class=&#34;yellow&#34;&gt;立即加载&lt;/span&gt;，容器加载的时候就会创建 bean 对象&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ApplicationContext 要想成为延迟加载，只需要按照如下方式进行配置&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationContext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token prolog&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;beans&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;xmlns&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;http://www.springframework.org/schema/beans&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;xmlns:&lt;/span&gt;xsi&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;http://www.w3.org/2001/XMLSchema-instance&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token attr-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;xsi:&lt;/span&gt;schemaLocation&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;bean&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;bookDao&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;com.itheima.dao.impl.BookDaoImpl&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;  &lt;span class=&#34;token attr-name&#34;&gt;lazy-init&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;true&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;beans&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;bean-相关&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bean-相关&#34;&gt;#&lt;/a&gt; bean 相关&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/1629986510487.png&#34; alt=&#34;1629986510487&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;依赖注入相关&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#依赖注入相关&#34;&gt;#&lt;/a&gt; 依赖注入相关&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/1629986848563.png&#34; alt=&#34;1629986848563&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;注解开发&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注解开发&#34;&gt;#&lt;/a&gt; 注解开发&lt;/h1&gt;
&lt;h2 id=&#34;定义-bean&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定义-bean&#34;&gt;#&lt;/a&gt; 定义 bean&lt;/h2&gt;
&lt;p&gt;XML 与注解配置的对应关系:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/1629990315619.png&#34; alt=&#34;1629990315619&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;@Component 注解不可以添加在接口上，因为接口是无法创建对象的。&lt;/p&gt;
&lt;/div&gt;
&lt;h4 id=&#34;知识点1component等&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识点1component等&#34;&gt;#&lt;/a&gt; 知识点 1:@Component 等&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;@Component/@Controller/@Service/@Repository&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;类型&lt;/td&gt;
&lt;td&gt;类注解&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;位置&lt;/td&gt;
&lt;td&gt;类定义上方&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;作用&lt;/td&gt;
&lt;td&gt;设置该类为 spring 管理的 bean&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;value（默认）：定义 bean 的 id&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt; &lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;记住 @Component、@Controller、@Service、@Repository 这四个注解&lt;/li&gt;
&lt;li&gt;applicationContext.xml 中 &lt;code&gt;&amp;lt;context:component-san/&amp;gt;&lt;/code&gt;  的作用是指定扫描包路径，注解为 @ComponentScan&lt;/li&gt;
&lt;li&gt;@Configuration 标识该类为配置类，使用类替换 applicationContext.xml 文件&lt;/li&gt;
&lt;li&gt;ClassPathXmlApplicationContext 是加载 XML 配置文件&lt;/li&gt;
&lt;li&gt;AnnotationConfigApplicationContext 是加载配置类&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;知识点1postconstruct&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识点1postconstruct&#34;&gt;#&lt;/a&gt; 知识点 1：@PostConstruct&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;@PostConstruct&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;类型&lt;/td&gt;
&lt;td&gt;方法注解&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;位置&lt;/td&gt;
&lt;td&gt;方法上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;作用&lt;/td&gt;
&lt;td&gt;设置该方法为初始化方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;知识点2predestroy&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识点2predestroy&#34;&gt;#&lt;/a&gt; 知识点 2：@PreDestroy&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;@PreDestroy&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;类型&lt;/td&gt;
&lt;td&gt;方法注解&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;位置&lt;/td&gt;
&lt;td&gt;方法上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;作用&lt;/td&gt;
&lt;td&gt;设置该方法为销毁方法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/1630033039358.png&#34; alt=&#34;1630033039358&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;知识点1autowired&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识点1autowired&#34;&gt;#&lt;/a&gt; 知识点 1：@Autowired&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;@Autowired&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;类型&lt;/td&gt;
&lt;td&gt;属性注解  或  方法注解（了解）  或  方法形参注解（了解）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;位置&lt;/td&gt;
&lt;td&gt;属性定义上方  或  标准 set 方法上方  或  类 set 方法上方  或  方法形参前面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;作用&lt;/td&gt;
&lt;td&gt;为引用类型属性设置值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;required：true/false，定义该属性是否允许为 null&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;知识点2qualifier&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识点2qualifier&#34;&gt;#&lt;/a&gt; 知识点 2：@Qualifier&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;@Qualifier&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;类型&lt;/td&gt;
&lt;td&gt;属性注解  或  方法注解（了解）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;位置&lt;/td&gt;
&lt;td&gt;属性定义上方  或  标准 set 方法上方  或  类 set 方法上方&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;作用&lt;/td&gt;
&lt;td&gt;为引用类型属性指定注入的 beanId&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;value（默认）：设置注入的 beanId&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;知识点3value&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识点3value&#34;&gt;#&lt;/a&gt; 知识点 3：@Value&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;@Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;类型&lt;/td&gt;
&lt;td&gt;属性注解  或  方法注解（了解）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;位置&lt;/td&gt;
&lt;td&gt;属性定义上方  或  标准 set 方法上方  或  类 set 方法上方&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;作用&lt;/td&gt;
&lt;td&gt;为  基本数据类型  或  字符串类型  属性设置值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;value（默认）：要注入的属性值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;知识点4propertysource&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识点4propertysource&#34;&gt;#&lt;/a&gt; 知识点 4：@PropertySource&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;@PropertySource&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;类型&lt;/td&gt;
&lt;td&gt;类注解&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;位置&lt;/td&gt;
&lt;td&gt;类定义上方&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;作用&lt;/td&gt;
&lt;td&gt;加载 properties 文件中的属性值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;属性&lt;/td&gt;
&lt;td&gt;value（默认）：设置加载的 properties 文件对应的文件名或文件名组成的数组&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#-2&#34;&gt;#&lt;/a&gt; &lt;/h2&gt;
</content>
        <category term="Backend" scheme="https://slx-world.top/categories/backend/" />
        <category term="Framework" scheme="https://slx-world.top/categories/backend/framework/" />
        <category term="Spring" scheme="https://slx-world.top/tags/spring/" />
        <updated>2024-10-11T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/test/python/python-fundamentals/</id>
        <title>Python 基础</title>
        <link rel="alternate" href="https://slx-world.top/test/python/python-fundamentals/"/>
        <content type="html">&lt;h1 id=&#34;注释&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注释&#34;&gt;#&lt;/a&gt; 注释&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;单行注释&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;span&gt;单行注释&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 注释内容&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多行注释&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;span&gt;多行注释&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#34;&#34;&#34; 注释内容 &#34;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39; 注释内容 &#39;&#39;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;变量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#变量&#34;&gt;#&lt;/a&gt; 变量&lt;/h1&gt;
&lt;p&gt;语法&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;变量 = 值&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;标识符&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;由数字、字⺟、下划线组成&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不能数字开头&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不能使用内置关键字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;严格区分大小写&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;False&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;None&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;True&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;and&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;as&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;assert&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;break&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;class&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;continue&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;def&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;del&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;elif&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;else&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;except&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;finally&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;for&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;from&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;global&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;if&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;import&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;in&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;is&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;lambda&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;nonlocal&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;not&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;or&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;pass&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;raise&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;return&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;try&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;while&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;with&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;yield&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;命名习惯&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;见名知义&lt;/li&gt;
&lt;li&gt;大驼峰：即每个单词首字⺟都大写，例如： MyName&lt;/li&gt;
&lt;li&gt;小驼峰：第二个（含）以后的单词首字⺟大写，例如： myName&lt;/li&gt;
&lt;li&gt;下划线：例如： my_name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;整型&lt;/span&gt;：&lt;span class=&#34;rainbow&#34;&gt;int&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;浮点型&lt;/span&gt;：&lt;span class=&#34;rainbow&#34;&gt;float&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;字符串&lt;/span&gt;：&lt;span class=&#34;rainbow&#34;&gt;str&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;布尔型&lt;/span&gt;：&lt;span class=&#34;rainbow&#34;&gt;bool&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;元组&lt;/span&gt;：&lt;span class=&#34;rainbow&#34;&gt;tuple&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;集合&lt;/span&gt;：&lt;span class=&#34;rainbow&#34;&gt;set&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;字典&lt;/span&gt;：&lt;span class=&#34;rainbow&#34;&gt;dict&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241020184438051.png&#34; alt=&#34;image-20241020184438051&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出&#34;&gt;#&lt;/a&gt; 输出&lt;/h1&gt;
&lt;p&gt;格式化符号&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;%s&lt;/span&gt;：格式化输出字符串&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;%d&lt;/span&gt;：格式化输出整数&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;%f&lt;/span&gt;：格式化输出浮点数&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;%06d&lt;/span&gt;：表示输出的整数显示位数，不足以 0 补全，超出当前位数则原样输出&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;%.2f&lt;/span&gt;：表示小数点后显示的小数位数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;f - 字符串&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;f&#39;{表达式}&#39;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;转义字符&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;\n&lt;/span&gt;：换行&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;\t&lt;/span&gt;：制表符，，一个 tab 键（4 个空格）的距离&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;print 结束符&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;span&gt;print结束符&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;内容&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入&#34;&gt;#&lt;/a&gt; 输入&lt;/h1&gt;
&lt;p&gt;输入功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;input (&#39; 提示文字 &#39;)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入的特点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一般将 input 接收的数据存储到变量&lt;/li&gt;
&lt;li&gt;input 接收的任何数据默认都是字符串数据类型&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;转换数据类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#转换数据类型&#34;&gt;#&lt;/a&gt; 转换数据类型&lt;/h1&gt;
&lt;p&gt;转换数据类型常用的函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;int()&lt;/li&gt;
&lt;li&gt;float()&lt;/li&gt;
&lt;li&gt;str()&lt;/li&gt;
&lt;li&gt;list()&lt;/li&gt;
&lt;li&gt;tuple()&lt;/li&gt;
&lt;li&gt;eval()&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;函数&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;span class=&#34;rainbow&#34;&gt;int(x [,base])&lt;/span&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;将 x 转换为一个整数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;span class=&#34;rainbow&#34;&gt;float(x)&lt;/span&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;将 x 转换为一个浮点数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;complex(real [,imag])&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;创建一个复数，real 为实部，imag 为虚部&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;span class=&#34;rainbow&#34;&gt;str(x)&lt;/span&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;将对象  x 转换为字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;repr(x)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;将对象  x 转换为表达式字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;span class=&#34;rainbow&#34;&gt;eval(str)&lt;/span&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;用来计算在字符串中的有效 Python 表达式，并返回一个对象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;span class=&#34;rainbow&#34;&gt;tuple(s)&lt;/span&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;将序列  s 转换为一个元组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;span class=&#34;rainbow&#34;&gt;list(s)&lt;/span&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;将序列  s 转换为一个列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;chr(x)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;将一个整数转换为一个 Unicode 字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;ord(x)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;将一个字符转换为它的 ASCII 整数值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;hex(x)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;将一个整数转换为一个十六进制字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;oct(x)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;将一个整数转换为一个八进制字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;bin(x)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;将一个整数转换为一个二进制字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#运算符&#34;&gt;#&lt;/a&gt; 运算符&lt;/h1&gt;
&lt;h2 id=&#34;分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分类&#34;&gt;#&lt;/a&gt; 分类&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;算数运算符&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;赋值运算符&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;复合赋值运算符&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;比较运算符&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;逻辑运算符&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;算术运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#算术运算符&#34;&gt;#&lt;/a&gt; 算术运算符&lt;/h2&gt;
&lt;h2 id=&#34;赋值运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#赋值运算符&#34;&gt;#&lt;/a&gt; 赋值运算符&lt;/h2&gt;
</content>
        <category term="Python" scheme="https://slx-world.top/categories/Python/" />
        <category term="Python" scheme="https://slx-world.top/tags/python/" />
        <updated>2024-10-10T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/test/test-basis/day02/</id>
        <title>测试基础 Day02</title>
        <link rel="alternate" href="https://slx-world.top/test/test-basis/day02/"/>
        <content type="html">&lt;h1 id=&#34;等价类划分法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#等价类划分法&#34;&gt;#&lt;/a&gt; 🌺等价类划分法&lt;/h1&gt;
&lt;h2 id=&#34;说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#说明&#34;&gt;#&lt;/a&gt; 🌱说明&lt;/h2&gt;
&lt;p&gt;在所有测试数据中，具有某种&lt;span class=&#34;yellow&#34;&gt;共同特征&lt;/span&gt;的数据集合进行划分&lt;/p&gt;
&lt;h2 id=&#34;分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分类&#34;&gt;#&lt;/a&gt; 🌱分类&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;有效等价类&lt;/span&gt;：满足需求的数据集合&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;无效等价类&lt;/span&gt;：不满足需求的数据集合&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#步骤&#34;&gt;#&lt;/a&gt; 🌱步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;明确需求&lt;/li&gt;
&lt;li&gt;确定有效和无效等价类&lt;/li&gt;
&lt;li&gt;提取数据编写测试用例&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;适用场景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#适用场景&#34;&gt;#&lt;/a&gt; 🌱适用场景&lt;/h2&gt;
&lt;p&gt;针对需要有大量数据测试输入，但是没办法穷举测试的地方&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;输入框&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;下拉列表&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;单选复选框&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;典型代表：页面的输入框类测试&lt;/p&gt;
&lt;h1 id=&#34;边界值分析法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#边界值分析法&#34;&gt;#&lt;/a&gt; 🌺边界值分析法&lt;/h1&gt;
&lt;h2 id=&#34;边界范围节点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#边界范围节点&#34;&gt;#&lt;/a&gt; 🌱边界范围节点&lt;/h2&gt;
&lt;p&gt;选取&lt;span class=&#34;yellow&#34;&gt;正好等于&lt;/span&gt;、&lt;span class=&#34;yellow&#34;&gt;刚好大于&lt;/span&gt;、&lt;span class=&#34;yellow&#34;&gt;刚好小于&lt;/span&gt;边界的值作为测试数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;上点&lt;/span&gt;：边界上的点（正好等于）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;离点&lt;/span&gt;：距离上点最近的点（刚好大于、刚好小于）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;内点&lt;/span&gt;：范围内的点（区间范围内的数据）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;步骤-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#步骤-2&#34;&gt;#&lt;/a&gt; 🌱步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;明确需求&lt;/li&gt;
&lt;li&gt;确定有效和无效等价类&lt;/li&gt;
&lt;li&gt;确定边界范围值&lt;/li&gt;
&lt;li&gt;提取数据编写测试用例&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;优化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#优化&#34;&gt;#&lt;/a&gt; 🌱优化&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;上点&lt;/span&gt;：必选（不考虑区间开闭）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;内点&lt;/span&gt;：必选（建议选择中间范围）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;离点&lt;/span&gt;：&lt;span class=&#34;yellow&#34;&gt;开内闭外&lt;/span&gt;（考虑开闭区间，开区间选择内部离点，闭区间选择外部离点）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;例如：标题长度大于 0，小于等于 30 个字符，离点选择 1，31&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;使用场景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用场景&#34;&gt;#&lt;/a&gt; 🌱使用场景&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;在等价类的基础上，针对有边界范围的测试数据输入的地方（重点关注边界）&lt;/li&gt;
&lt;li&gt;常见词语描述：大小、尺寸、重量、最大、最小、至多、至少等修饰词语&lt;/li&gt;
&lt;li&gt;典型代表：有边界范围的&lt;span class=&#34;yellow&#34;&gt;输入框&lt;/span&gt;类测试&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;判定表法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#判定表法&#34;&gt;#&lt;/a&gt; 🌺判定表法&lt;/h1&gt;
&lt;h2 id=&#34;定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定义&#34;&gt;#&lt;/a&gt; 🌱定义&lt;/h2&gt;
&lt;p&gt;是一种以&lt;span class=&#34;yellow&#34;&gt;表格&lt;/span&gt;形式表达多条件逻辑判断的工具&lt;/p&gt;
&lt;h2 id=&#34;组成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#组成&#34;&gt;#&lt;/a&gt; 🌱组成&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;条件桩&lt;/span&gt;：列出问题中的所有条件，列出条件的次序无关紧要&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;动作桩&lt;/span&gt;：列出问题中可能采取的操作，操作的排序顺序没有约束&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;条件项&lt;/span&gt;：列出条件对应的取值，所有可能情况下的真假值&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;动作项&lt;/span&gt;：列出条件项的、各种取值情况下应该采取的动作结果&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;练习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#练习&#34;&gt;#&lt;/a&gt; 🌱练习&lt;/h2&gt;
&lt;p&gt;1）、输入的第一列字符必须是 A 或 B&lt;/p&gt;
&lt;p&gt;2）、第二列字符必须是一个数字&lt;/p&gt;
&lt;p&gt;3）、如果第一列字符不正确，则给出信息 L&lt;/p&gt;
&lt;p&gt;4）、如果第二列字符不正确，则给出信息 M&lt;/p&gt;
&lt;p&gt;5）、如果两列字符输入正确，则修改文件成功&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241020084629674.png&#34; alt=&#34;image-20241020084629674&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;规则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#规则&#34;&gt;#&lt;/a&gt; 🌱规则&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;判定表中贯穿条件项和动作项的一列就是一条规则&lt;/li&gt;
&lt;li&gt;假设有 n 个条件，每个条件的取值有两个（0, 1），全组合有 2 的 n 次方种规则&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;步骤-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#步骤-3&#34;&gt;#&lt;/a&gt; 🌱步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;明确需求&lt;/li&gt;
&lt;li&gt;画出判定表
&lt;ol&gt;
&lt;li&gt;列出条件桩和动作桩&lt;/li&gt;
&lt;li&gt;填写条件项、对条件进行全组合&lt;/li&gt;
&lt;li&gt;根据条件项的组合确定动作项&lt;/li&gt;
&lt;li&gt;简化、合并相似规则（有相同的动作）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;根据规则编写测试用例&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;使用场景-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用场景-2&#34;&gt;#&lt;/a&gt; 🌱使用场景&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;有多个输入条件，多个输出结果，输入条件之间有&lt;span class=&#34;yellow&#34;&gt;组合&lt;/span&gt;关系，输入条件和输出结果之间有依赖（制约）关系&lt;/li&gt;
&lt;li&gt;判定表一般适用于条件组合数量较少的情况（比如 4 个条件以下）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;场景法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#场景法&#34;&gt;#&lt;/a&gt; 🌺场景法&lt;/h1&gt;
&lt;h2 id=&#34;流程图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#流程图&#34;&gt;#&lt;/a&gt; 🌱流程图&lt;/h2&gt;
&lt;p&gt;使用标准图形和箭头来表达程序或业务的走向&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241019192905832.png&#34; alt=&#34;image-20241019192905832&#34; /&gt;&lt;/p&gt;
&lt;p&gt;流程图对测试人员有什么作用？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;能够看懂流程图，设计业务用例&lt;/li&gt;
&lt;li&gt;当需求文档信息不全时，能够根据需求，梳理出流程&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;网页版工具：&lt;ins class=&#34;info&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucHJvY2Vzc29uLmNvbS8=&#34;&gt;https://www.processon.com/&lt;/span&gt;&lt;/ins&gt;&lt;/p&gt;
&lt;p&gt;Windows 工具：visio&lt;/p&gt;
&lt;h2 id=&#34;介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#介绍&#34;&gt;#&lt;/a&gt; 🌱介绍&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;p&gt;场景法也可以叫流程图法，是用流程图描述用户的使用场景，然后通过覆盖流程路径来设计测试用例&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;意义：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;用户使用角度&lt;/span&gt;：用户平时使用的不是单个功能，而是多个功能组合起来进行使用&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;测试人员角度&lt;/span&gt;：平时测试的都是单个功能点进行测试，容易忽略多个功能的组合测试&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;适用场景-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#适用场景-2&#34;&gt;#&lt;/a&gt; 🌱适用场景&lt;/h2&gt;
&lt;p&gt;根据实际的应用场景，来测试业务用例，可以使用场景法&lt;/p&gt;
&lt;h1 id=&#34;错误推测法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#错误推测法&#34;&gt;#&lt;/a&gt; 🌺错误推测法&lt;/h1&gt;
&lt;h2 id=&#34;定义-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定义-2&#34;&gt;#&lt;/a&gt; 🌱定义&lt;/h2&gt;
&lt;p&gt;通过&lt;span class=&#34;yellow&#34;&gt;经验&lt;/span&gt;推测系统可能出现的问题&lt;/p&gt;
&lt;h2 id=&#34;思想&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#思想&#34;&gt;#&lt;/a&gt; 🌱思想&lt;/h2&gt;
&lt;p&gt;根据经验列举出可能出现问题的清单，根据清单分析问题可能原因，推测发现缺陷&lt;/p&gt;
&lt;h2 id=&#34;场景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#场景&#34;&gt;#&lt;/a&gt; 🌱场景&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;时间紧，任务量大时，根据之前项目类似经验找出易出错的模块重点测试&lt;/li&gt;
&lt;li&gt;时间宽裕，通过该方法列出之前出现问题较多的模块再次测试&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="Test" scheme="https://slx-world.top/categories/test/" />
        <category term="Test-Basis" scheme="https://slx-world.top/tags/test-basis/" />
        <updated>2024-10-10T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/backend/ssm/spring/day01/</id>
        <title>Spring_day01</title>
        <link rel="alternate" href="https://slx-world.top/backend/ssm/spring/day01/"/>
        <content type="html">&lt;h1 id=&#34;系统架构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#系统架构&#34;&gt;#&lt;/a&gt; 🌲系统架构&lt;/h1&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/1629720945720.png&#34; alt=&#34;1629720945720&#34; /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;核心层&lt;/span&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;Core Container&lt;/span&gt;：核心容器，这个模块是 Spring 最核心的模块，其他的都需要依赖该模块&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;AOP 层&lt;/span&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;AOP&lt;/span&gt;：面向切面编程，它依赖核心层容器，目的是在不改变原有代码的前提下对其进行功能增强&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;Aspects&lt;/span&gt;：AOP 是思想，Aspects 是对 AOP 思想的具体实现&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;数据层&lt;/span&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;Data Access&lt;/span&gt;：数据访问，Spring 全家桶中有对数据访问的具体实现技术&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;Data Integration&lt;/span&gt;：数据集成，Spring 支持整合其他的数据层解决方案，比如 Mybatis&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;Transactions&lt;/span&gt;：事务，Spring 中事务管理是 Spring AOP 的一个具体实现，也是后期学习的重点内容&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;Web 层&lt;/span&gt;
&lt;ul&gt;
&lt;li&gt;这一层的内容将在 SpringMVC 框架具体学习&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;Test 层&lt;/span&gt;
&lt;ul&gt;
&lt;li&gt;Spring 主要整合了 Junit 来完成单元测试和集成测试&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;基本配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本配置&#34;&gt;#&lt;/a&gt; 🌲基本配置&lt;/h1&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationContext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;beans&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;bean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;bean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;bean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;beans&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationContext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;bean&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;bean 的唯一标识&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;bean 的类全名&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token attr-name&#34;&gt;scope&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;bean 的作用范围，有 singleton（默认）和 prototype&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;bean 取的别名&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;beans 标签：定义 Spring 核心容器管理的对象&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;yellow&#34;&gt;id&lt;/span&gt;：bean 的 id，使用容器可以通过 id 的值获取对应的 bean，在一个容器中 id 值唯一&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;yellow&#34;&gt;class&lt;/span&gt;：bean 的类型，即配置的 bean 的全路径类名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;yellow&#34;&gt;name&lt;/span&gt;：定义 bean 的别名，可以定义多个，使用逗号（,）分号（;）空格 () 分隔&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;yellow&#34;&gt;scope&lt;/span&gt;：定义 bean 的作用范围，可选范围如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;singleton&lt;/span&gt;：单例（默认）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;prototype&lt;/span&gt;：非单例&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为什么 bean 默认为单例？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bean 为单例的意思是在 Spring 的 IOC 容器中只会有该类的一个对象&lt;/li&gt;
&lt;li&gt;bean 对象只有一个就避免了对象的频繁创建与销毁，达到了 bean 对象的复用，性能高&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;bean 在容器中是单例的，会不会产生线程安全问题？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果对象是有状态对象，即该对象有成员变量可以用来存储数据的。&lt;/li&gt;
&lt;li&gt;因为所有请求线程共用一个 bean 对象，所以会存在线程安全问题。&lt;/li&gt;
&lt;li&gt;如果对象是无状态对象，即该对象没有成员变量没有进行数据存储的，&lt;/li&gt;
&lt;li&gt;因方法中的局部变量在方法调用完成后会被销毁，所以不会存在线程安全问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;哪些 bean 对象适合交给容器进行管理？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;rainbow&#34;&gt;表现层对象&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;rainbow&#34;&gt;业务层对象&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;rainbow&#34;&gt;数据层对象&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;rainbow&#34;&gt;工具对象&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;哪些 bean 对象不适合交给容器进行管理？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;封装实例的域对象，因为会引发线程安全问题，所以不适合&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;bean-实例化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bean-实例化&#34;&gt;#&lt;/a&gt; 🌲bean 实例化&lt;/h1&gt;
&lt;h2 id=&#34;构造方法实例化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#构造方法实例化&#34;&gt;#&lt;/a&gt; 🍂构造方法实例化&lt;/h2&gt;
&lt;p&gt;Spring 容器在创建对象时，走的是类的&lt;span class=&#34;yellow&#34;&gt;无参&lt;/span&gt;构造方法，权限修饰符可以为&lt;span class=&#34;yellow&#34;&gt;私有&lt;/span&gt; &lt;span class=&#34;red&#34;&gt;private&lt;/span&gt;，底层用的是&lt;span class=&#34;yellow&#34;&gt;反射&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;静态工厂实例化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#静态工厂实例化&#34;&gt;#&lt;/a&gt; 🍂静态工厂实例化&lt;/h2&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationContext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;bean&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;factory-method&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;class&lt;/span&gt;：工厂类的类全名&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;factory-method&lt;/span&gt;：具体工厂类中创建对象的方法名&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20210729195248948.png&#34; alt=&#34;image-20210729195248948&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;实例工厂与-factorybean&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实例工厂与-factorybean&#34;&gt;#&lt;/a&gt; 🍂实例工厂与 FactoryBean&lt;/h2&gt;
&lt;h3 id=&#34;实例工厂实例化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实例工厂实例化&#34;&gt;#&lt;/a&gt; 💧实例工厂实例化&lt;/h3&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationContext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;bean&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;bean&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;factory-method&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;factory-bean&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol&gt;
&lt;li&gt;创建实例化工厂对象，对应的是第一行配置&lt;/li&gt;
&lt;li&gt;调用对象中的方法来创建 bean，对应的是第二行配置
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;factory-bean&lt;/span&gt;：工厂的实例对象&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;factory-method&lt;/span&gt;：工厂类中的具体创建对象的方法名，对应关系如下:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20210729200203249.png&#34; alt=&#34;image-20210729200203249&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;factorybean-的使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#factorybean-的使用&#34;&gt;#&lt;/a&gt; 💧FactoryBean 的使用&lt;/h3&gt;
&lt;p&gt;FactoryBean 接口的三个方法：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;span&gt;FactoryBean 接口&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Exception&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;Class&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getObjectType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;isSingleton&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;getObject()&lt;/span&gt;：被重写后，在方法中进行对象的创建并返回&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;getObjectType()&lt;/span&gt;：被重写后，主要返回的是被创建类的 Class 对象&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;isSingleton()&lt;/span&gt;：没有被重写，因为它已经给了默认值，从方法名中可以看出其作用是设置对象是否为单例，默认 true，改为 false，则为多例&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;bean-生命周期&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bean-生命周期&#34;&gt;#&lt;/a&gt; 🌲bean 生命周期&lt;/h1&gt;
&lt;p&gt;（1）Spring 中对 bean 生命周期控制提供了两种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在配置文件中的 bean 标签中添加 &lt;span class=&#34;red&#34;&gt;init-method&lt;/span&gt; 和 &lt;span class=&#34;red&#34;&gt;destroy-method&lt;/span&gt; 属性&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationContext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;bean&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;init-method&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;destroy-method&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;类实现 &lt;span class=&#34;red&#34;&gt;InitializingBean&lt;/span&gt; 与 &lt;span class=&#34;red&#34;&gt;DisposableBean&lt;/span&gt; 接口，这种方式了解下即可&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;（2）对于 bean 的生命周期控制在 bean 的整个生命周期中所处的位置如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;初始化容器&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建对象 (内存分配)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行构造方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行属性注入 (set 操作)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;yellow&#34;&gt;执行 bean 初始化方法&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 bean&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;执行业务操作&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关闭 / 销毁容器&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;执行 bean 销毁方法&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（3）关闭容器的两种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ConfigurableApplicationContext 是 ApplicationContext 的子类&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;close()&lt;/span&gt; 方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;registerShutdownHook()&lt;/span&gt; 方法&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;close 和 registerShutdownHook 选哪个？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;相同点：这两种都能用来关闭容器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不同点：close () 是在调用的时候关闭，registerShutdownHook () 是在 JVM 退出前调用关闭。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;di-相关&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#di-相关&#34;&gt;#&lt;/a&gt; 🌲DI 相关&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;依赖注入描述了在容器中建立 bean 与 bean 之间的依赖关系的过程，如果 bean 运行需要的是数字或字符串呢？
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;简单类型（基本数据类型与 String）&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;引用类型&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;setter-注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#setter-注入&#34;&gt;#&lt;/a&gt; 🍂setter 注入&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;简单数据类型&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationContext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;bean&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;property&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;bean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;引用数据类型&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationContext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;bean&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;property&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;ref&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;bean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;构造器注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#构造器注入&#34;&gt;#&lt;/a&gt; 🍂构造器注入&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;简单数据类型&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationContext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;bean&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;constructor-arg&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;bean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;引用数据类型&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationContext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;bean&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;constructor-arg&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;ref&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;bean&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;依赖注入的方式选择上
&lt;ul&gt;
&lt;li&gt;建议使用 setter 注入&lt;/li&gt;
&lt;li&gt;第三方技术根据情况选择&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;自动装配&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自动装配&#34;&gt;#&lt;/a&gt; 🌲自动装配&lt;/h1&gt;
&lt;p&gt;什么是依赖自动装配？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IoC 容器根据 bean 所依赖的资源在容器中自动查找并注入到 bean 中的过程称为自动装配&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自动装配方式有哪些？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;按类型（常用）&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;按名称&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;按构造方法&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;red&#34;&gt;不启用自动装配&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationcontext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;bean&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token attr-name&#34;&gt;autowire&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果按照名称去找对应的 bean 对象，找不到则注入 &lt;span class=&#34;red&#34;&gt;Null&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当某一个类型在 IOC 容器中有多个对象，按照名称注入只找其指定名称对应的 bean 对象，不会报错&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于依赖注入，需要注意一些其他的配置特征：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自动装配用于引用类型依赖注入，不能对简单类型进行操作&lt;/li&gt;
&lt;li&gt;使用按类型装配时（&lt;span class=&#34;red&#34;&gt;byType&lt;/span&gt;）必须保障容器中相同类型的 bean 唯一，推荐使用&lt;/li&gt;
&lt;li&gt;使用按名称装配时（&lt;span class=&#34;red&#34;&gt;byName&lt;/span&gt;）必须保障容器中具有指定名称的 bean，因变量名与配置耦合，不推荐使用&lt;/li&gt;
&lt;li&gt;自动装配优先级低于 setter 注入与构造器注入，同时出现时自动装配配置失效&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;集合注入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#集合注入&#34;&gt;#&lt;/a&gt; 🌲集合注入&lt;/h1&gt;
&lt;p&gt;常见的集合类型有哪些？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;数组&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;List&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;Set&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;Map&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;Properties&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;数组类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数组类型&#34;&gt;#&lt;/a&gt; 🍂数组类型&lt;/h2&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationContext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;property&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;array&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;100&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;200&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;300&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;array&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;property&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;list-类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#list-类型&#34;&gt;#&lt;/a&gt; 🍂List 类型&lt;/h2&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationContext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;property&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;list&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;itcast&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;itheima&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;boxuegu&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;chuanzhihui&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;property&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;set-类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#set-类型&#34;&gt;#&lt;/a&gt; 🍂Set 类型&lt;/h2&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationContext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;property&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;set&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;itcast&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;itheima&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;boxuegu&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;boxuegu&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;property&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;map-类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#map-类型&#34;&gt;#&lt;/a&gt; 🍂Map 类型&lt;/h2&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationContext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;property&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;map&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;map&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;entry&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;country&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;china&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;entry&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;province&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;henan&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;entry&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;city&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;kaifeng&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;map&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;property&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;properties-类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#properties-类型&#34;&gt;#&lt;/a&gt; 🍂Properties 类型&lt;/h2&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;applicationContext.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;property&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;properties&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;props&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;prop&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;country&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;china&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;prop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;prop&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;province&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;henan&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;prop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;prop&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;city&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;kaifeng&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;prop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;props&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;property&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;property&lt;/span&gt; 标签表示 setter 方式注入，构造方式注入 &lt;span class=&#34;yellow&#34;&gt;constructor-arg&lt;/span&gt; 标签内部也可以写 &lt;span class=&#34;red&#34;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;、&lt;span class=&#34;red&#34;&gt;&amp;lt;list&amp;gt;&lt;/span&gt;、&lt;span class=&#34;red&#34;&gt;&amp;lt;set&amp;gt;&lt;/span&gt;、&lt;span class=&#34;red&#34;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;、&lt;span class=&#34;red&#34;&gt;&amp;lt;props&amp;gt;&lt;/span&gt; 标签&lt;/li&gt;
&lt;li&gt;List 的底层也是通过&lt;span class=&#34;yellow&#34;&gt;数组&lt;/span&gt;实现的，所以 &lt;span class=&#34;red&#34;&gt;&amp;lt;list&amp;gt;&lt;/span&gt; 和 &lt;span class=&#34;red&#34;&gt;&amp;lt;array&amp;gt;&lt;/span&gt; 标签是可以混用&lt;/li&gt;
&lt;li&gt;集合中要添加引用类型，只需要把 &lt;span class=&#34;yellow&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt; 标签改成 &lt;span class=&#34;red&#34;&gt;&amp;lt;ref&amp;gt;&lt;/span&gt; 标签，这种方式用的比较少&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="Backend" scheme="https://slx-world.top/categories/backend/" />
        <category term="Framework" scheme="https://slx-world.top/categories/backend/framework/" />
        <category term="Spring" scheme="https://slx-world.top/tags/spring/" />
        <updated>2024-10-10T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/test/test-basis/day01/</id>
        <title>测试基础 Day01</title>
        <link rel="alternate" href="https://slx-world.top/test/test-basis/day01/"/>
        <content type="html">&lt;h1 id=&#34;软件测试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#软件测试&#34;&gt;#&lt;/a&gt; 🌺软件测试&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;rainbow&#34;&gt;软件&lt;/span&gt;：控制计算机硬件工作的工具&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;rainbow&#34;&gt;软件测试&lt;/span&gt;：使用&lt;span class=&#34;yellow&#34;&gt;技术&lt;/span&gt;手段&lt;span class=&#34;yellow&#34;&gt;验证&lt;/span&gt;软件是否满足使用需求&lt;/p&gt;
&lt;p&gt;软件测试&lt;span class=&#34;yellow&#34;&gt;目的&lt;/span&gt;：减少软件&lt;span class=&#34;yellow&#34;&gt;缺陷&lt;/span&gt;（bug），保障软件质量&lt;/p&gt;
&lt;h1 id=&#34;测试技能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试技能&#34;&gt;#&lt;/a&gt; 🌺测试技能&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;功能测试&lt;/span&gt;：验证程序的&lt;span class=&#34;yellow&#34;&gt;功能&lt;/span&gt;是否满足需求&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;自动化测试&lt;/span&gt;：使用&lt;span class=&#34;yellow&#34;&gt;代码&lt;/span&gt;或&lt;span class=&#34;yellow&#34;&gt;工具&lt;/span&gt;代替手工，对项目进行测试&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;接口测试&lt;/span&gt;：使用&lt;span class=&#34;yellow&#34;&gt;代码&lt;/span&gt;或&lt;span class=&#34;yellow&#34;&gt;工具&lt;/span&gt;对服务端提供的接口进行测试&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;性能测试&lt;/span&gt;：模拟&lt;span class=&#34;yellow&#34;&gt;多人&lt;/span&gt;使用软件，查找服务器缺陷&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;测试分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试分类&#34;&gt;#&lt;/a&gt; 🌺测试分类&lt;/h1&gt;
&lt;h2 id=&#34;按测试阶段划分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#按测试阶段划分&#34;&gt;#&lt;/a&gt; 🌱按测试阶段划分&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;单元测试&lt;/span&gt;：针对程序源代码进行测试&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;⬇️&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;集成测试&lt;/span&gt;：又称&lt;span class=&#34;rainbow&#34;&gt;接口测试&lt;/span&gt;，针对模块之间访问地址进行测试&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;⬇️&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;系统测试&lt;/span&gt;：对整个系统进行测试，包括功能、兼容、文档等测试&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;⬇️&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;验收测试&lt;/span&gt;：主要分为&lt;span class=&#34;rainbow&#34;&gt;内测&lt;/span&gt;、&lt;span class=&#34;rainbow&#34;&gt;公测&lt;/span&gt;，使用不同人群来发掘项目缺陷&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;按代码可见度划分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#按代码可见度划分&#34;&gt;#&lt;/a&gt; 🌱按代码可见度划分&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;黑盒测试&lt;/span&gt;：不关注源代码，针对程序 UI 功能进行测试。源代码不可见，UI 功能可见&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;灰盒测试&lt;/span&gt;：针对程序部分代码进行测试（接口）。&lt;span class=&#34;yellow&#34;&gt;部分&lt;/span&gt;源代码可见，UI 功能不可见&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;白盒测试&lt;/span&gt;：针对程序源代码进行测试。全部代码可见，UI 功能不可见&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#其他&#34;&gt;#&lt;/a&gt; 🌱其他&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;性能测试&lt;/span&gt;：归属&lt;span class=&#34;rainbow&#34;&gt;专项测试&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;自动化测试&lt;/span&gt;：归属&lt;span class=&#34;rainbow&#34;&gt;功能测试&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;质量模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#质量模型&#34;&gt;#&lt;/a&gt; 🌺质量模型&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;功能性&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;性能&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;兼容性&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;易用性&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;可靠性&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;安全&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;可维护性&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;可移植性&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;测试流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试流程&#34;&gt;#&lt;/a&gt; 🌺测试流程&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;需求评审&lt;/span&gt;：确保各部门需求理解一致&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;⬇️&lt;/strong&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;计划编写&lt;/span&gt;：测什么、谁来测、怎么测&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;⬇️&lt;/strong&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;用例设计&lt;/span&gt;：验证项目是否符合需求的操作文档&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;⬇️&lt;/strong&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;用例执行&lt;/span&gt;：项目模块开发完成，开始执行用例文档，实施测试&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;⬇️&lt;/strong&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;缺陷管理&lt;/span&gt;：对缺陷进行管理的过程&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;⬇️&lt;/strong&gt;&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;测试报告&lt;/span&gt;：实施测试结果文档&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;测试用例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试用例&#34;&gt;#&lt;/a&gt; 🌺测试用例&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;rainbow&#34;&gt;用例&lt;/span&gt;：用户使用的案例&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;rainbow&#34;&gt;测试用例&lt;/span&gt;：是为测试项目而设计的&lt;span class=&#34;yellow&#34;&gt;执行文档&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;测试用例的&lt;span class=&#34;yellow&#34;&gt;作用&lt;/span&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;防止漏测&lt;/li&gt;
&lt;li&gt;实施测试的标准&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;用例设计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用例设计&#34;&gt;#&lt;/a&gt; 🌱用例设计&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;用例编号&lt;/span&gt;：项目_模块_编号&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;用例标题&lt;/span&gt;：预期结果（测试点）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;项目 / 模块&lt;/span&gt;：所属项目或模块&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;优先级&lt;/span&gt;：表示用例的重要程度或者影响力 P0～P4 (P0 最高）&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;前置条件&lt;/span&gt;：要执行此条用例，有哪些前置操作&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;测试步骤&lt;/span&gt;：描述操作步骤&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;测试数据&lt;/span&gt;：操作的数据，没有的话可以为空&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;rainbow&#34;&gt;预期结果&lt;/span&gt;：期望达到的结果&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;span class=&#34;rainbow&#34;&gt;用例编号&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;rainbow&#34;&gt;用例标题&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;rainbow&#34;&gt;项目 / 模块&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;rainbow&#34;&gt;优先级&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;rainbow&#34;&gt;前置条件&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;rainbow&#34;&gt;测试步骤&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;rainbow&#34;&gt;测试数据&lt;/span&gt;&lt;/th&gt;
&lt;th&gt;&lt;span class=&#34;rainbow&#34;&gt;预期结果&lt;/span&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
        <category term="Test" scheme="https://slx-world.top/categories/test/" />
        <category term="Test-Basis" scheme="https://slx-world.top/tags/test-basis/" />
        <updated>2024-10-09T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/devops/docker/docker-notes/</id>
        <title>Docker 笔记</title>
        <link rel="alternate" href="https://slx-world.top/devops/docker/docker-notes/"/>
        <content type="html">&lt;h1 id=&#34;️docker-命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#️docker-命令&#34;&gt;#&lt;/a&gt; ⛵️Docker 命令&lt;/h1&gt;
&lt;h2 id=&#34;进程相关&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#进程相关&#34;&gt;#&lt;/a&gt; 🐬进程相关&lt;/h2&gt;
&lt;p&gt;启动 Docker 服务&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Docker 进程相关命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;systemctl start &lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;停止 Docker 服务&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Docker 进程相关命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;systemctl stop &lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;重启 Docker 服务&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Docker 进程相关命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;systemctl restart &lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查看 Docker 服务状态&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Docker 进程相关命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;systemctl status &lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;设置开机自启动 Docker 服务&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Docker 进程相关命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;systemctl &lt;span class=&#34;token builtin class-name&#34;&gt;enable&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;镜像相关&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#镜像相关&#34;&gt;#&lt;/a&gt; 🐬镜像相关&lt;/h2&gt;
&lt;p&gt;查看镜像：查看本地所有镜像&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Docker 镜像相关命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; images&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; images &lt;span class=&#34;token parameter variable&#34;&gt;-q&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 查看所有镜像的 id&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;搜索镜像：从网络中查找需要的镜像&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Docker 镜像相关命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; search 镜像名称&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;拉取镜像：从 Docker 仓库下载镜像到本地，镜像名称格式为：名称：版本号&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;如果不指定版本号，则默认是最新的版本，如果不知道镜像版本号，可以去 docker hub 查看&lt;/p&gt;
&lt;/div&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Docker 镜像相关命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; search 镜像名称&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;删除镜像：删除本地镜像&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Docker 镜像相关命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; rmi 镜像id &lt;span class=&#34;token comment&#34;&gt;# 删除指定本地镜像&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; rmi &lt;span class=&#34;token string&#34;&gt;&#39;docker images -q&#39;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 删除本地所有镜像&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;容器相关&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#容器相关&#34;&gt;#&lt;/a&gt; 🐬容器相关&lt;/h2&gt;
&lt;p&gt;查看容器&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ps&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 查看正在运行的容器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ps&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-a&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 查看所有容器，包括已停止运行的容器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;创建并启动容器&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; run 参数&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;进入容器&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Docker 容器相关命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;exec&lt;/span&gt; 参数 &lt;span class=&#34;token comment&#34;&gt;# 退出容器，容器不会关闭&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;停止容器&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Docker 容器相关命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; stop 容器名称&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;启动容器&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Docker 容器相关命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; start 容器名称&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;删除容器&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Docker 容器相关命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; 容器名称&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查看容器信息&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;Docker 容器相关命令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; inspect 容器名称&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;️docker-数据卷&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#️docker-数据卷&#34;&gt;#&lt;/a&gt; ⛵️Docker 数据卷&lt;/h1&gt;
&lt;h2 id=&#34;概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念&#34;&gt;#&lt;/a&gt; 🐬概念&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;数据卷是宿主机的一个目录或文件&lt;/li&gt;
&lt;li&gt;当容器目录和数据卷目录绑定后，对方的修改会立即同步&lt;/li&gt;
&lt;li&gt;一个数据卷可以被多个容器同时挂载&lt;/li&gt;
&lt;li&gt;一个容器也可以被挂载多个数据卷&lt;/li&gt;
&lt;li&gt;数据卷和容器之间是多对多关系&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;作用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#作用&#34;&gt;#&lt;/a&gt; 🐬作用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;容器数据持久化&lt;/li&gt;
&lt;li&gt;外部机器和容器间接通信&lt;/li&gt;
&lt;li&gt;容器之间数据交换&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置&#34;&gt;#&lt;/a&gt; 🐬配置&lt;/h2&gt;
&lt;p&gt;创建并启动容器时，使用 -v 参数设置容器卷&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;docker&lt;/span&gt; run &lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;. &lt;span class=&#34;token parameter variable&#34;&gt;-v&lt;/span&gt; 宿主机目录（文件）:容器内目录（文件）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;div class=&#34;note info&#34;&gt;
&lt;ol&gt;
&lt;li&gt;目录必须是绝对路径&lt;/li&gt;
&lt;li&gt;如果目录不存在，则会自动创建&lt;/li&gt;
&lt;li&gt;可以挂载多个数据卷&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
        <category term="DevOps" scheme="https://slx-world.top/categories/devops/" />
        <category term="Docker" scheme="https://slx-world.top/tags/docker/" />
        <updated>2024-10-08T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/tutorial/blog/hexo-shoka-appveyor/</id>
        <title>三、备份与持续集成</title>
        <link rel="alternate" href="https://slx-world.top/tutorial/blog/hexo-shoka-appveyor/"/>
        <content type="html">&lt;div class=&#34;note primary&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://slx-world.top/tutorial/blog/hexo-shoka/&#34;&gt;&lt;ins class=&#34;info&#34;&gt;一、博客搭建&lt;/ins&gt;&lt;/a&gt; ✈️ &lt;a href=&#34;https://slx-world.top/tutorial/blog/github-picgo-typora/&#34;&gt;&lt;ins class=&#34;info&#34;&gt;二、图床搭建&lt;/ins&gt;&lt;/a&gt; ✈️ &lt;a href=&#34;https://slx-world.top/tutorial/blog/hexo-shoka-appveyor/&#34;&gt;&lt;ins class=&#34;info&#34;&gt;三、备份与持续集成&lt;/ins&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;创建备份仓库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建备份仓库&#34;&gt;#&lt;/a&gt; 🔆创建备份仓库&lt;/h1&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;&lt;span class=&#34;yellow&#34;&gt;该仓库用于备份博客源码，名字可以随便起，记得与本地仓库保持一致即可，且分支必须保持与先前存放站点文件的仓库一样！！！&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;持续集成配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#持续集成配置&#34;&gt;#&lt;/a&gt; 🔆持续集成配置&lt;/h1&gt;
&lt;h2 id=&#34;登录-appveyor&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#登录-appveyor&#34;&gt;#&lt;/a&gt; 🥀登录 AppVeyor&lt;/h2&gt;
&lt;p&gt;直接使用 &lt;span class=&#34;yellow&#34;&gt;GitHub&lt;/span&gt; 授权登录即可 👉 &lt;a href=&#34;https://ci.appveyor.com/login&#34;&gt;&lt;ins class=&#34;info&#34;&gt;AppVeyor 登录页&lt;/ins&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241004235221432.png&#34; alt=&#34;image-20241004235221432&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;新建项目&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#新建项目&#34;&gt;#&lt;/a&gt; 🥀新建项目&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;点击 &lt;span class=&#34;green&#34;&gt;NEW PROJECT&lt;/span&gt;，然后再点击 &lt;span class=&#34;green&#34;&gt;Import existing installations&lt;/span&gt;，将 &lt;span class=&#34;yellow&#34;&gt;AppVeyor&lt;/span&gt; 授权为 &lt;span class=&#34;yellow&#34;&gt;GitHub App&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241005002305224.png&#34; alt=&#34;image-20241005002305224&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241005001316429.png&#34; alt=&#34;image-20241005001316429&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选定 &lt;span class=&#34;red&#34;&gt;1&lt;/span&gt; 中的仓库作为新项目&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241005003342842.png&#34; alt=&#34;image-20241005003342842&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;编写构建脚本&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#编写构建脚本&#34;&gt;#&lt;/a&gt; 🥀编写构建脚本&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;新建 Access Token&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;blue&#34;&gt;略&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将生成好的 Access Token 用 AppVeyor 进行 &lt;span class=&#34;yellow&#34;&gt;加密&lt;/span&gt;，随即将密文 &lt;span class=&#34;yellow&#34;&gt;复制保存&lt;/span&gt; 下来，以防备用&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241005004031868.png&#34; alt=&#34;image-20241005004031868&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 Hexo 目录中创建并编写 &lt;span class=&#34;yellow&#34;&gt;appveyor.yml&lt;/span&gt; 构建脚本，并将密文配置上去&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241005005145834.png&#34; alt=&#34;image-20241005005145834&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;span&gt;appveyor.yml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;clone_depth&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;access_token&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;secure&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# Access Token 加密后的密文&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;install&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; node &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;version&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; npm &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;version&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; npm install&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; npm install hexo&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;cli &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;g&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; hexo &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;version&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; npm un hexo&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;renderer&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;marked &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;save&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; npm i hexo&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;renderer&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;markdown&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;it&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;plus hexo&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;renderer&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;multi&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;markdown&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;it markdown&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;it&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;prism hexo&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;autoprefixer hexo&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;algoliasearch hexo&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;symbols&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;time hexo&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;feed hexo&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;filter&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;nofollow &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;save&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; npm list&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;build_script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; hexo generate&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; hexo algolia&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;artifacts&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; public&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;on_success&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; git config &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;global credential.helper store&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;ps&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; Add&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;Content &#34;$env&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;USERPROFILE\.git&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;credentials&#34; &#34;https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//$($env&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;access_token)&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;oauth&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;basic@github.com`n&#34;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; git config &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;global user.email &#34;%GIT_USER_EMAIL%&#34;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; git config &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;global user.name &#34;%GIT_USER_NAME%&#34;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; git clone &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;depth 5 &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;q &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;branch=%TARGET_BRANCH% %STATIC_SITE_REPO% %TEMP%\static&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;site&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; cd %TEMP%\static&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;site&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; del * /f /q&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; for /d %%p IN (&lt;span class=&#34;token important&#34;&gt;*)&lt;/span&gt; do rmdir &#34;%%p&#34; /s /q&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; SETLOCAL EnableDelayedExpansion &amp;amp; robocopy &#34;%APPVEYOR_BUILD_FOLDER%\public&#34; &#34;%TEMP%\static&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;site&#34; /e &amp;amp; IF &lt;span class=&#34;token tag&#34;&gt;!ERRORLEVEL&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;!&lt;/span&gt; EQU 1 (exit 0) ELSE (IF &lt;span class=&#34;token tag&#34;&gt;!ERRORLEVEL&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;!&lt;/span&gt; EQU 3 (exit 0) ELSE (exit 1))&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; git add &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;A&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; if &#34;%APPVEYOR_REPO_BRANCH%&#34;==&#34;master&#34; if not defined APPVEYOR_PULL_REQUEST_NUMBER (git diff &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;quiet &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;exit&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;code &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;cached &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; git commit &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;m &#34;Update Static Site&#34; &lt;span class=&#34;token important&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git push origin %TARGET_BRANCH% &lt;span class=&#34;token important&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; appveyor AddMessage &#34;Static Site Updated&#34;)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;环境变量设置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境变量设置&#34;&gt;#&lt;/a&gt; 🥀环境变量设置&lt;/h2&gt;
&lt;p&gt;添加并设置如下 &lt;span class=&#34;yellow&#34;&gt;4&lt;/span&gt; 个环境变量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;STATIC_SITE_REPO&lt;/span&gt;：&lt;span class=&#34;yellow&#34;&gt;博客站点 Github 仓库地址&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;TARGET_BRANCH&lt;/span&gt;：&lt;span class=&#34;yellow&#34;&gt;博客站点仓库的 branch（默认是 master）&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;GIT_USER_EMAIL&lt;/span&gt;：&lt;span class=&#34;yellow&#34;&gt;GitHub 账号的邮箱&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;GIT_USER_NAME&lt;/span&gt;：&lt;span class=&#34;yellow&#34;&gt;GitHub 账号的用户名&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241005010707541.png&#34; alt=&#34;image-20241005010707541&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;上传备份&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#上传备份&#34;&gt;#&lt;/a&gt; 🔆上传备份&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;需要备份的文件有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;source&lt;/span&gt; 目录的所有文件&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;scaffolds&lt;/span&gt; 目录的所有文件&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;themes&lt;/span&gt; 目录的所有文件&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;_config.landscape.yml&lt;/span&gt; 文件&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;_config.yml&lt;/span&gt; 文件&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;appveyor.yml&lt;/span&gt; 文件&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;package.json&lt;/span&gt; 文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编辑 &lt;span class=&#34;yellow&#34;&gt;.ignore&lt;/span&gt; 文件，添加不需要备份的文件&lt;/p&gt;
&lt;figure class=&#34;highlight tex&#34;&gt;&lt;figcaption data-lang=&#34;TeX&#34;&gt;&lt;span&gt;.ignore文件&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.DS_Store&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Thumbs.db&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;db.json&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*.log&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node_modules/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;public/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.deploy*/&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;_multiconfig.yml&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;package-lock.json&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将本地博客源码上传到备份仓库&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;git 命令行窗口&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-A&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; commit &lt;span class=&#34;token parameter variable&#34;&gt;-m&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;备份博客源码&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; push origin master&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;观察构建情况&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#观察构建情况&#34;&gt;#&lt;/a&gt; 🔆观察构建情况&lt;/h1&gt;
&lt;p&gt;博客源码成功推送到备份仓库时，会直接触发 Appveyor 构建，执行 &lt;span class=&#34;yellow&#34;&gt;appveyor.yml&lt;/span&gt; 构建脚本&lt;/p&gt;
&lt;p&gt;当观察到有 &lt;span class=&#34;green&#34;&gt;Build success&lt;/span&gt; 字样时，即为构建成功&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241005014140785.png&#34; alt=&#34;image-20241005014140785&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以来到 &lt;span class=&#34;yellow&#34;&gt;站点仓库&lt;/span&gt; 查看最新的提交记录&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241005014532714.png&#34; alt=&#34;image-20241005014532714&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;label success&#34;&gt;😎success&lt;/span&gt;&lt;span class=&#34;rainbow&#34;&gt;&lt;strong&gt; 至此，一个完美的博客就此诞生了，感谢大家的陪伴与支持&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;🎆🎆🎆🌸🌸🌸&lt;/strong&gt;&lt;/p&gt;
</content>
        <category term="Tutorial" scheme="https://slx-world.top/categories/tutorial/" />
        <category term="Blog" scheme="https://slx-world.top/tags/blog/" />
        <updated>2024-10-03T14:24:36.000Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/devops/maven/maven-advanced/</id>
        <title>Maven 高级</title>
        <link rel="alternate" href="https://slx-world.top/devops/maven/maven-advanced/"/>
        <content type="html">&lt;h1 id=&#34;聚合&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#聚合&#34;&gt;#&lt;/a&gt; ✨聚合&lt;/h1&gt;
&lt;p&gt;聚合用于快速构建 Maven 工程，一次性构建多个项目 / 模块。&lt;/p&gt;
&lt;h2 id=&#34;制作方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#制作方式&#34;&gt;#&lt;/a&gt; 💖制作方式&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建一个空模块，打包方式定义为 &lt;span class=&#34;yellow&#34;&gt;pom&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;父 pom.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;packaging&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;pom&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;packaging&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;定义构建时关联的其他模块&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;父 pom.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;modules&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;module&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;../ssm_controller&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;module&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;module&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;../ssm_service&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;module&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;module&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;../ssm_dao&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;module&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;module&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;../ssm_pojo&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;module&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;modules&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;&lt;span class=&#34;yellow&#34;&gt;参与聚合的模块在构建时的执行顺序与模块之间的依赖关系有关，与配置顺序无关&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;继承&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#继承&#34;&gt;#&lt;/a&gt; ✨继承&lt;/h1&gt;
&lt;p&gt;子模块通过继承实现沿用父模块中的配置，与 Java 中的继承类似&lt;/p&gt;
&lt;h2 id=&#34;制作方式-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#制作方式-2&#34;&gt;#&lt;/a&gt; 💖制作方式&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在子模块中声明父工程的坐标及位置&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;子 pom.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;parent&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com.itheima&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;ssm&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 填写父工程的 pom.xml 文件位置 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;relativePath&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;../ssm/pom.xml&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;relativePath&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;parent&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在父工程中定义依赖管理&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;父 pom.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependencyManagement&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependencies&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org.springframework&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring-context&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;5.1.9.RELEASE&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dependencies&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dependencyManagement&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在子模块中定义依赖关系，继承父工程的依赖，无需声明版本号&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;span&gt;子 pom.xml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependencies&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org.springframework&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring-context&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dependencies&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;继承的资源有：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241005163026816.png&#34; alt=&#34;image-20241005163026816&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;继承与聚合&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#继承与聚合&#34;&gt;#&lt;/a&gt; ✨继承与聚合&lt;/h1&gt;
</content>
        <category term="DevOps" scheme="https://slx-world.top/categories/devops/" />
        <category term="Maven" scheme="https://slx-world.top/tags/maven/" />
        <updated>2024-10-01T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/devops/maven/maven-fundamentals/</id>
        <title>Maven 基础</title>
        <link rel="alternate" href="https://slx-world.top/devops/maven/maven-fundamentals/"/>
        <content type="html"></content>
        <category term="DevOps" scheme="https://slx-world.top/categories/devops/" />
        <category term="Maven" scheme="https://slx-world.top/tags/maven/" />
        <updated>2024-10-01T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://slx-world.top/tutorial/blog/github-picgo-typora/</id>
        <title>二、图床搭建</title>
        <link rel="alternate" href="https://slx-world.top/tutorial/blog/github-picgo-typora/"/>
        <content type="html">&lt;div class=&#34;note primary&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://slx-world.top/tutorial/blog/hexo-shoka/&#34;&gt;&lt;ins class=&#34;info&#34;&gt;一、博客搭建&lt;/ins&gt;&lt;/a&gt; ✈️ &lt;a href=&#34;https://slx-world.top/tutorial/blog/github-picgo-typora/&#34;&gt;&lt;ins class=&#34;info&#34;&gt;二、图床搭建&lt;/ins&gt;&lt;/a&gt; ✈️ &lt;a href=&#34;https://slx-world.top/tutorial/blog/hexo-shoka-appveyor/&#34;&gt;&lt;ins class=&#34;info&#34;&gt;三、备份与持续集成&lt;/ins&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;软件安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#软件安装&#34;&gt;#&lt;/a&gt; 🎀软件安装&lt;/h1&gt;
&lt;h2 id=&#34;git-安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git-安装&#34;&gt;#&lt;/a&gt; 💗Git 安装&lt;/h2&gt;
&lt;p&gt;略&lt;/p&gt;
&lt;h2 id=&#34;picgo-安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#picgo-安装&#34;&gt;#&lt;/a&gt; 💗PicGo 安装&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Molunerfinn/PicGo/releases/&#34;&gt;&lt;ins class=&#34;info&#34;&gt;PicGo 下载链接&lt;/ins&gt;&lt;/a&gt;：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL01vbHVuZXJmaW5uL1BpY0dvL3JlbGVhc2VzLw==&#34;&gt;https://github.com/Molunerfinn/PicGo/releases/&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;&lt;span class=&#34;yellow&#34;&gt;推荐使用 2.3.1 正式版&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241001213835429.png&#34; alt=&#34;image-20241001213835429&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;typora-安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#typora-安装&#34;&gt;#&lt;/a&gt; 💗Typora 安装&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://pan.baidu.com/s/12qgG7CT4_ygoqd-CDggcLA?pwd=e7mg&#34;&gt;&lt;ins class=&#34;info&#34;&gt;Typora1.9.4 百度网盘&lt;/ins&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/agj_3zHhsuBQsD2tHTQ4Fg&#34;&gt;&lt;ins class=&#34;info&#34;&gt;Typora1.9.4 安装教程&lt;/ins&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://markdown.com.cn/intro.html&#34;&gt;&lt;ins class=&#34;info&#34;&gt;Markdown 官方教程&lt;/ins&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解压后，将 &lt;span class=&#34;yellow&#34;&gt;Crack&lt;/span&gt; 中的 &lt;span class=&#34;yellow&#34;&gt;winmm.dll&lt;/span&gt; 文件复制粘贴到 Typora 的安装目录即可&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241002200235854.png&#34; alt=&#34;image-20241002200235854&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;github-设置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#github-设置&#34;&gt;#&lt;/a&gt; 🎀GitHub 设置&lt;/h1&gt;
&lt;h2 id=&#34;创建仓库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建仓库&#34;&gt;#&lt;/a&gt; 💗创建仓库&lt;/h2&gt;
&lt;p&gt;该仓库用于存放博客图片&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241002144038707.png&#34; alt=&#34;image-20241002144038707&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;生成令牌&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生成令牌&#34;&gt;#&lt;/a&gt; 💗生成令牌&lt;/h2&gt;
&lt;p&gt;右上角点击 &lt;span class=&#34;green&#34;&gt;头像&lt;/span&gt;，来到 &lt;span class=&#34;green&#34;&gt;Settings -&amp;gt; Developer Settings -&amp;gt; Personal access tokens&lt;/span&gt;，然后点击 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL3BlcnNvbmFsLWFjY2Vzcy10b2tlbnMvbmV3&#34;&gt;Generate new token&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241002200555213.png&#34; alt=&#34;image-20241002200555213&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;仓库授权&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#仓库授权&#34;&gt;#&lt;/a&gt; 💗仓库授权&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;选定 &lt;span class=&#34;red&#34;&gt;2.1&lt;/span&gt; 中已创建好的仓库&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241002145941587.png&#34; alt=&#34;image-20241002145941587&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;权限设置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;仓库权限&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;yellow&#34;&gt;账户权限&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;均全部授权即可&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241002150150970.png&#34; alt=&#34;image-20241002150150970&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;完成后，点击 &lt;span class=&#34;green&#34;&gt;Generate token&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;&lt;span class=&#34;yellow&#34;&gt;&lt;strong&gt;token 仅在生成的时候可见，记得复制保存下来，以防备用！！！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;picgo-设置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#picgo-设置&#34;&gt;#&lt;/a&gt; 🎀PicGo 设置&lt;/h1&gt;
&lt;h2 id=&#34;图床设置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#图床设置&#34;&gt;#&lt;/a&gt; 💗图床设置&lt;/h2&gt;
&lt;p&gt;点击 &lt;span class=&#34;green&#34;&gt;GitHub&lt;/span&gt; 选项，进行 &lt;span class=&#34;green&#34;&gt;GitHub 设置&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设定仓库名：用户名 / 仓库，根据 &lt;span class=&#34;red&#34;&gt;2.1&lt;/span&gt; 中的仓库而定&lt;/li&gt;
&lt;li&gt;设定分支：根据 &lt;span class=&#34;red&#34;&gt;2.1&lt;/span&gt; 中的仓库而定&lt;/li&gt;
&lt;li&gt;设定 Token：复制粘贴 &lt;span class=&#34;red&#34;&gt;2.2&lt;/span&gt; 中的令牌&lt;/li&gt;
&lt;li&gt;设定存储路径：可选&lt;/li&gt;
&lt;li&gt;设定自定义域名：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pbWFnZXMud2VzZXJ2Lm5sLz91cmw9aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doLyVFNyU5NCVBOCVFNiU4OCVCNyVFNSU5MCU4RC8lRTQlQkIlOTMlRTUlQkElOTNAJUU1JTg4JTg2JUU2JTk0JUFG&#34;&gt;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/ 用户名 / 仓库 @分支&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241002152655936.png&#34; alt=&#34;image-20241002152655936&#34; /&gt;&lt;/p&gt;
&lt;p&gt;相关信息配置好后，点击 &lt;span class=&#34;blue&#34;&gt;确定&lt;/span&gt;，并 &lt;span class=&#34;green&#34;&gt;设为默认图床&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;站点配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#站点配置&#34;&gt;#&lt;/a&gt; 🎀站点配置&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;来到 &lt;span class=&#34;yellow&#34;&gt;hexo 目录 \themes\shoka\scripts\helpers&lt;/span&gt;，修改 &lt;span class=&#34;red&#34;&gt;engine.js&lt;/span&gt; 代码&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;span&gt;engine.js 代码&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;token function-variable function&#34;&gt;parseImage&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;img&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;img&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;startsWith&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;//&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; img&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;startsWith&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;http&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; img&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;https://tva&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;randomServer&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;.sinaimg.cn/&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;size&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;img&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;具体配置为：&lt;span class=&#34;red&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pbWFnZXMud2VzZXJ2Lm5sLz91cmw9aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doLyVFNyU5NCVBOCVFNiU4OCVCNyVFNSU5MCU4RC8lRTQlQkIlOTMlRTUlQkElOTNAJUU1JTg4JTg2JUU2JTk0JUFGLw==&#34;&gt;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/ 用户名 / 仓库 @分支 /&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;red&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pbWFnZXMud2VzZXJ2Lm5sLz91cmw9&#34;&gt;https://images.weserv.nl/?url=&lt;/span&gt;&lt;/span&gt;：图缓存链接，让图片快速加载&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如，我的配置是这样的：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;span&gt;engine.js 代码&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;token function-variable function&#34;&gt;parseImage&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;img&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;img&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;startsWith&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;//&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; img&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;startsWith&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;http&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; img&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// return &#39;https://tva&#39;+randomServer+&#39;.sinaimg.cn/&#39;+size+&#39;/&#39;+img&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;// return &#39;https://images.weserv.nl/?url=https://raw.githubusercontent.com/slx-world/blog-images/master/&#39;+img&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;img&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;typora-设置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#typora-设置&#34;&gt;#&lt;/a&gt; 🎀Typora 设置&lt;/h1&gt;
&lt;h2 id=&#34;设置图像并验证&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置图像并验证&#34;&gt;#&lt;/a&gt; 💗设置图像并验证&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;左上角点击 &lt;span class=&#34;green&#34;&gt;文件 -&amp;gt; 偏好设置 -&amp;gt; 图像&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241001225158438.png&#34; alt=&#34;image-20241001225158438&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置完后，点击 &lt;span class=&#34;green&#34;&gt;验证图片上传选项&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.weserv.nl/?url=https://cdn.jsdelivr.net/gh/slx-world/blog-images@master/image-20241002201849398.png&#34; alt=&#34;image-20241002201849398&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class=&#34;label success&#34;&gt;✔️success&lt;/span&gt;&lt;span class=&#34;rainbow&#34;&gt;&lt;strong&gt; 至此，个人图床搭建完毕，感谢大家的品阅与支持&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;👇😘💍&lt;/strong&gt;&lt;/p&gt;
</content>
        <category term="Tutorial" scheme="https://slx-world.top/categories/tutorial/" />
        <category term="Blog" scheme="https://slx-world.top/tags/blog/" />
        <updated>2024-09-20T14:24:36.000Z</updated>
    </entry>
</feed>
